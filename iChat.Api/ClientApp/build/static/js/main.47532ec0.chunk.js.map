{"version":3,"sources":["services/UserStatusService.js","sidebar/SidebarItem.Conversation.js","sidebar/SidebarItem.Channel.js","services/ProfileService.js","services/ApiService.js","modalForms/JoinChannelForm.js","components/CloseButton.js","modals/Modal.js","services/AuthService.js","sidebar/SidebarItem.JoinChannel.js","modalForms/CreateChannelForm.js","modalForms/StartConversationForm.js","sidebar/Sidebar.js","modals/DropdownModal.js","modalForms/InviteOtherMembersForm.js","modalForms/ShowMemberListForm.js","modalForms/InvitePeopleForm.js","modalForms/SetStatusForm.js","modalForms/EditProfileForm.js","content/ContentHeaderUserInfo.js","content/ContentHeaderSettings.js","content/ContentHeader.js","services/EmojiService.js","modals/BlankModal.js","modals/BlankModalWithPageOverlay.js","components/EmojiPicker.js","content/ContentMessageItem.UserReactions.js","content/ContentMessageItem.FileItemImage.js","content/ContentMessageItem.UrlPreview.js","modalForms/ShareFileForm.js","content/ContentMessageItem.FileItemToolbar.js","content/ContentMessageItem.FileItem.js","content/ContentMessageItem.js","services/QuillService.js","content/ContentEditor.UserMention.js","modalForms/UploadFileForm.js","content/ContentEditor.js","content/ContentMessageItemEditor.js","content/ContentMessages.ChannelDescription.js","content/ContentMessages.ConversationDescription.js","services/MessageChangeService.js","services/MessageScrollService.js","content/ContentMessages.js","content/ContentFooter.js","components/UserPopup.js","content/Content.js","MainPage.js","account/Login.js","account/AcceptInvitation.js","account/ResetPassword.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["UserStatusService","name","value","status","this","getStatusList","find","s","SidebarItemConversation","props","conversation","userStatusService","react_default","a","createElement","react_router_dom","to","concat","id","className","active","unreadMessageCount","userCount","isTheOtherUserOnline","title","Popup","trigger","content","inverted","position","size","disabled","length","otherUserStatus","isNotActive","statusName","getStatusName","Icon","SidebarItemChannel","channel","hasUnreadMessage","unreadMentionCount","ProfileService","Object","classCallCheck","localStorageKey","profile","localStorage","setItem","JSON","stringify","getItem","parse","getProfile","token","ApiService","profileService","error","console","Promise","reject","url","options","noContentType","noAuth","fetchCommon","then","response","ok","headers","get","includes","json","text","r","result","resolve","catch","fetchErrorHandler","blob","URL","createObjectURL","getToken","history","push","bearer","fetch","JoinChannelForm","_this","possibleConstructorReturn","getPrototypeOf","call","onJoinChannelFormSubmit","bind","assertThisInitialized","changeSelectedChannel","apiService","state","channelList","selectedChannelId","undefined","event","_this2","preventDefault","button","currentTarget","querySelector","classList","add","method","body","onChannelJoined","toast","remove","item","_this3","channels","map","c","key","setState","style","textAlign","onSubmit","Dropdown","placeholder","fluid","search","selection","onChange","type","React","Component","CloseButton","onKeyup","document","addEventListener","removeEventListener","e","onClose","onClick","fontSize","Modal","modalRoot","getElementById","el","appendChild","removeChild","modal","simplebar_react_esm","src_components_CloseButton","children","ReactDOM","createPortal","AuthService","email","password","setProfile","removeItem","SidebarItemJoinChannel","authService","onJoinChannel","onCloseJoinChannelModal","isJoinChannelModalOpen","stopPropagation","onUpdateChannelList","src_modals_Modal","modalForms_JoinChannelForm","assign","CreateChannelForm","onCreateChannelFormSubmit","target","elements","topic","onChannelCreated","htmlFor","required","StartConversationForm","onStartConversationFormSubmit","changeConversationUser","userList","conversationUserIds","onConversationStarted","users","currentUserId","userProfile","filter","u","displayName","multiple","Sidebar","onCreateChannel","onCloseCreateChannel","onStartConversation","onCloseStartConversation","onUpdateConversationList","hubConnection","on","conversations","isCreateChannelModalOpen","isPageLoading","fetchChannels","isStartConversationModalOpen","fetchConversations","_this4","all","_this5","Segment","Loader","Image","src","isChannel","SidebarItem_Channel","modalForms_CreateChannelForm","SidebarItem_JoinChannel","SidebarItem_Conversation","modalForms_StartConversationForm","DropdownModal","onOverlayClick","dropdownModalRoot","closest","InviteOtherMembersForm","onInviteOtherMembersFormSubmit","changeInviteMembers","inviteMembersUserIds","allUsersPromise","memberIdsPromise","_ref","_ref2","slicedToArray","memberIds","every","ShowMemberListForm","memberList","onOpenUserPopup","identiconPath","InvitePeopleForm","addAnotherEmail","removeEmail","onEmailFormSubmit","emailsToInvite","emails","index","splice","trim","success","workspaceName","handleChange","SetStatusForm","onSetStatusFormSubmit","statusList","UserStatus","selectedStatus","onSelect","selected","onSelectStatus","EditProfileForm","onEditProfileFormSubmit","phoneNumber","onProfileUpdated","pattern","ContentHeaderUserInfo","onHeaderClick","onCloseDropdown","onInvitePeople","onCloseInvitePeople","onCloseEditProfile","onSetStatus","onEditProfile","onClearStatus","onCloseSetStatus","onLogout","isInvitePeopleModalOpen","isSetStatusModalOpen","isEditProfileModalOpen","isDropdownModalOpen","onUserSessionDataChange","logout","userStatus","modals_DropdownModal","src_modalForms_SetStatusForm","modalForms_EditProfileForm","src_modalForms_InvitePeopleForm","ContentHeaderSettings","onSettingButtonClicked","onCloseSettingDropdown","onLeaveChannelClicked","onInviteOtherMembers","onCloseInviteOtherMembers","onShowMemberList","onCloseShowMemberList","isSettingDropdownModalOpen","isInviteOtherMembersModalOpen","isShowMemberListModalOpen","defaultChannelId","prevProps","selectedConversation","isPrivate","isSelfConversation","selectedChannel","modalForms_InviteOtherMembersForm","src_modalForms_ShowMemberListForm","messageChannelUserList","ContentHeader","fetchData","src_content_ContentHeaderSettings","src_content_ContentHeaderUserInfo","EmojiService","colons","emoji","EmojiConvertor","img_sets","google","path","sheet","img_set","use_sheet","replace_colons","BlankModal","BlankModalWithPageOverlay","closePopup","ctrlKey","shiftKey","altKey","keyCode","popup","popupContentRect","firstChild","getBoundingClientRect","targetRect","clickedTarget","top","bottom","height","left","right","contentHeaderHeight","offsetHeight","translateY","translateX","window","innerWidth","setAttribute","calculatePostion","modals_BlankModal","EmojiPicker","emojiService","onEmojiIconClick","closeEmoji","addEmoji","isEmojiOpen","onEmojiHtmlAdded","imgHtml","convertColonsToHtml","onEmojiColonsAdded","tooltipText","modals_BlankModalWithPageOverlay","dist_es","set","data","ContentMessageItemUserReactions","onReactionClicked","onEmojiColonsSelected","onEmojiClose","reaction","reactionClicked","some","onEmojiColonsRemoved","emojiColons","reactions","currentMessageReactions","onMouseOver","onHoverMessageReactions","onMouseLeave","onLeaveMessageReactions","reactedByYou","userNames","join","dangerouslySetInnerHTML","__html","src_components_EmojiPicker","ContentMessageItemFileItemImage","onImageFileClick","onImageFileFullScreenClose","isFullScreenModalOpen","imageUrl","onLoad","onImageLoadingFinished","onError","alt","imageName","ContentMessageItemUrlPreview","openGraphObjects","object","siteName","href","description","content_ContentMessageItem_FileItemImage","ShareFileForm","onShareFileFormSubmit","changeSelectedShareWith","channelPrefix","conversationPrefix","shareWithList","selectedShareWith","channelsPromise","conversationsPromise","forEach","shareWith","targetName","startsWith","substring","file","selectedValue","selectedItem","ContentMessageItemFileItemToolbar","onShareFileClick","onCloseShareFile","isShareFileModalOpen","fetchFile","objectUrl","link","display","click","onDownloadClick","src_modalForms_ShareFileForm","ContentMessageItemFileItem","isImage","contentType","content_ContentMessageItem_FileItemToolbar","RawMessage","edited","template","innerHTML","editedNode","textNode","createTextNode","lastChild","ContentMessageItem","onDeleteMessageConfirmed","onHoverMessageItem","onLeaveMessageItem","removeCurrentMessageHover","isDeleteMessageConfirmOpen","currentMessage","messageId","section","message","isConsecutiveMessage","isSystemMessage","sender","timeString","hasFileAttachments","onEditMessageClicked","Confirm","open","header","onCancel","onConfirm","contentEdited","containsOpenGraphObjects","content_ContentMessageItem_UrlPreview","openGraphDtos","fileAttachments","content_ContentMessageItem_FileItem","messageReactions","content_ContentMessageItem_UserReactions","QuillService","params","quill","spanTagName","keydownEventHandler","submitMessage","savedRange","setSelection","root","string","insertText","getText","deleteText","tagName","html","insertEmbed","editorContainerSelector","editor","onToggleFocus","off","onTextChange","Clipboard","Quill","import","Delta","PlainClipboard","_Clipboard","apply","arguments","inherits","createClass","container","innerText","insert","register","SpanTag","_Embed","node","blotName","defineProperty","onSubmitMessage","configQuill","bindings","list","handler","theme","modules","keyboard","registerEventHandlers","char","getSelection","newText","start","endsWith","substr","handled","metaKey","toggleFormatChars","ContentEditorUserMention","onMentionSelecting","activeItem","filterName","highlighting","highlightItemIndex","onMentionSelected","UploadFileForm","onUploadFileFormSubmit","files","warn","slice","showUploadingBar","formData","FormData","append","onUploaded","lastModified","Progress","percent","ContentEditor","isSendingTypingMessage","onFileUploaded","onCloseUploadFile","onUploadFileButtonClicked","onMentionButtonClicked","openMention","closeMention","onEditorPaste","quillService","containerId","isMentionOpen","mentionUserList","highlightMentionUserIndex","isUploadFileModalOpen","containerElement","init","initMention","fecthUsers","isEditing","populateCurrentContent","unregisterEventHandlers","test","stringifiedHtml","setContent","mention","mentionAtIndex","isSelecting","isSelectionInserted","isSelected","mentionRegex","mentionContainer","contains","pureText","_this6","groups","mentionUserIds","lastIndex","exec","messageContent","onMessageSubmitted","_this7","insertOp","ops","o","deleteOp","delete","setMentionList","getCursorIndex","onMentionFinish","mentionList","toLowerCase","indexOf","sendTypingMessage","setTimeout","user","insertHtml","getSpanTagName","formatMentionUser","setCursorIndex","focus","focusOnEditor","toggle","imageRegex","items","clipboardData","i","getAsFile","openUploadFile","uploadFiles","content_ContentEditor_UserMention","onPaste","src_modalForms_UploadFileForm","Array","from","ContentMessageItemEditor","saveChangesClicked","src_content_ContentEditor","ContentMessagesChannelDescription","dto","messageChannelDescriptionDto","createdBy","createdByUser","messageChannelName","createdDateString","ContentMessagesConversationDescription","data-user-id","MessageChangeService","CHANGE_TYPE","ADDED","EDITED","DELETED","newerMessage","olderMessage","senderId","newerMessageDate","moment","olderMessageDate","olderMessageGroups","newerMessageGroups","mergedMessageGroups","dateString","firstNewerMessageGroupMessages","messages","lastOlderMessageGroupMessages","setIsConsecutiveMessage","messageGroupDto","currentMessageGroups","editedMessage","currentGroup","g","currentMessageIndex","findIndex","m","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","group","currentGroupIndex","err","return","MessageScrollService","lastGroupIndex","offsetTops","messageGroupAnchors","scrolled","onScrollHandler","calculateMessageGroupOffsetTops","calculateCurrentGroup","scrollableElement","scrollableElementSelector","onscroll","scrollTop","savedScrollHeight","scrollHeight","onScrollToTop","querySelectorAll","anchorSelector","offsetTop","adjustHeight","startIndex","currentAnchor","stickyItemClassName","innerHeight","ContentMessages","fetchHistory","loadMoreHistory","onChannelMessageItemChange","onConversationMessageItemChange","onCloseEditingMessage","onMentionedUserClick","mesageChangeService","messageScrollService","resetMessage","messageGroups","editingMessageId","scrollDetector","areAllPagesLoaded","isFetchingHistory","isFetchingSingleMessage","resetLoadImage","isLoadingMore","currentMessageId","messageLoad","allMessagesLoaded","setNewImageFileCount","messageGroupDtos","updatedMessageGroups","mergeMessageGroups","updateMessageGroups","resumeScrollPosition","scrollToBottom","onFinishLoading","finally","changeType","handleAddedMessageItem","handleEditedMessageItem","handleDeletedMessageItem","fetchSingleMessage","isCloseToBottom","channelId","handleMessageItemChange","conversationId","callback","loadImage","imagesLoadedCallbacks","loadedImageCount","imageFileCount","finishLoading","imageLoadTimeout","timeoutInSeconds","newMessageGroups","fileMessage","openGraphImageCount","clearTimeout","reset","callbacks","userId","getAttribute","_this8","ContentMessages_ChannelDescription","ContentMessages_ConversationDescription","src_content_ContentMessageItem","src_content_ContentMessageItemEditor","ContentFooter","onOtherUserTyping","onOtherUserFinishedTyping","otherTypingNames","showOtherTypingInfo","otherTypingUserName","toggleOtherTypingInfo","show","names","addTypingName","removeTypingName","UserPopup","startConversation","userRealtimeStatusLoaded","isOnline","isUserOnline","Content","onUserPopupClose","fetchUsers","isUserPopupOpen","popupClickedTarget","popupUser","openUserPopup","src_content_ContentHeader","src_content_ContentMessages","src_content_ContentFooter","src_components_UserPopup","MainPage","isPulseSignalJustSent","connection","signalR","withUrl","accessTokenFactory","build","toString","sendPulseSignal","savedActiveSidebarItem","userSessionDataLoaded","activeSidebarItem","match","itemId","src_sidebar_Sidebar","src_content_Content","Login","onAccountFormSubmit","onWorkspaceFormSubmit","onForgotPasswordFormSubmit","onOwnerAccountFormSubmit","onPasswordChange","createdWorkspaceName","createdWorkspaceOwnerEmail","createdWorkspaceOwnerPassword","resetEmail","isLoginFormVisible","isForgotPasswordFormVisible","isForgotPasswordConfirmationFormVisible","isWorkspaceFormVisible","isOwnerLoginFormVisible","login","workspace","confirmPassword","setCustomValidity","minLength","onInput","AcceptInvitation","onAcceptInvitationFormSubmit","searchParams","URLSearchParams","location","code","ResetPassword","onResetPasswordFormSubmit","PrivateRoute","component","rest","objectWithoutProperties","react_router","render","isLoggedIn","pathname","configure","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnVisibilityChange","draggable","pauseOnHover","transition","Slide","App","components_PrivateRoute","exact","Boolean","hostname","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47532ec0.chunk.js","sourcesContent":["class UserStatusService {\r\n  getStatusList() {\r\n    return [\r\n      { name: \"In A Meeting\", value: \"InAMeeting\" },\r\n      { name: \"Commuting\", value: \"Commuting\" },\r\n      { name: \"Out Sick\", value: \"OutSick\" },\r\n      { name: \"Vacationing\", value: \"Vacationing\" },\r\n      { name: \"Working Remotely\", value: \"WorkingRemotely\" }\r\n    ];\r\n  }\r\n\r\n  getStatusName(value) {\r\n    let list = this.getStatusList();\r\n    let status = list.find(s => s.value === value);\r\n    return status ? status.name : \"\";\r\n  }\r\n\r\n  isNotActive(status) {\r\n    return status !== \"Active\";\r\n  }\r\n}\r\n\r\nexport default UserStatusService;\r\n","import React from \"react\";\r\nimport \"./SidebarItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport UserStatusService from \"services/UserStatusService\";\r\n\r\nfunction SidebarItemConversation(props) {\r\n  let truncateNameThreshold = 18;\r\n  let conversation = props.conversation;\r\n  let userStatusService = new UserStatusService();\r\n\r\n  return (\r\n    <Link to={`/conversation/${conversation.id}`}>\r\n      <div\r\n        className={\r\n          \"sidebar-item list-item\" +\r\n          (props.active ? \" sidebar-active-item\" : \"\") +\r\n          (conversation.unreadMessageCount && !props.active\r\n            ? \" unread-item\"\r\n            : \"\")\r\n        }\r\n      >\r\n        {conversation.userCount <= 2 &&\r\n          (conversation.isTheOtherUserOnline ||\r\n            conversation.userCount === 1) && (\r\n            <span className=\"user-realtime-status\" title=\"active\">\r\n              <span className=\"user-realtime-status-circle\" />\r\n            </span>\r\n          )}\r\n        {conversation.userCount <= 2 &&\r\n          !(\r\n            conversation.isTheOtherUserOnline || conversation.userCount === 1\r\n          ) && (\r\n            <span\r\n              className=\"user-realtime-status user-offline\"\r\n              title=\"away\"\r\n            >\r\n              <span className=\"user-realtime-status-circle\" />\r\n            </span>\r\n          )}\r\n        {conversation.userCount > 2 && (\r\n          <span className=\"sidebar-item-other-user-count\">\r\n            {conversation.userCount - 1}\r\n          </span>\r\n        )}\r\n        <Popup\r\n          trigger={\r\n            <span className=\"sidebar-item-name\">{conversation.name}</span>\r\n          }\r\n          content={conversation.name}\r\n          inverted\r\n          position=\"top center\"\r\n          size=\"tiny\"\r\n          disabled={\r\n            conversation.name.length > truncateNameThreshold ? false : true\r\n          }\r\n        />\r\n        {(() => {\r\n          if (\r\n            conversation.otherUserStatus &&\r\n            userStatusService.isNotActive(conversation.otherUserStatus)\r\n          ) {\r\n            let statusName = userStatusService.getStatusName(\r\n              conversation.otherUserStatus\r\n            );\r\n            return (\r\n              <Popup\r\n                trigger={\r\n                  <Icon\r\n                    name=\"flag\"\r\n                    className=\"status-icon sidebar-item-other-user-status\"\r\n                  />\r\n                }\r\n                content={statusName}\r\n                inverted\r\n                position=\"top center\"\r\n                size=\"mini\"\r\n              />\r\n            );\r\n          }\r\n        })()}\r\n        <span\r\n          className={\r\n            \"unread-badge\" +\r\n            (!conversation.unreadMessageCount || props.active\r\n              ? \" invisible\"\r\n              : \"\")\r\n          }\r\n        >\r\n          {conversation.unreadMessageCount}\r\n        </span>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SidebarItemConversation;\r\n","import React from \"react\";\r\nimport \"./SidebarItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nfunction SidebarItemChannel(props) {\r\n  let truncateNameThreshold = 18;\r\n  return (\r\n    <Link to={`/channel/${props.channel.id}`}>\r\n      <Popup\r\n        trigger={\r\n          <div\r\n            className={\r\n              \"sidebar-item list-item\" +\r\n              (props.active ? \" sidebar-active-item\" : \"\") +\r\n              (props.channel.hasUnreadMessage && !props.active\r\n                ? \" unread-item\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <span className=\"sidebar-item-name\">\r\n              {props.channel.name}\r\n            </span>\r\n            <span\r\n              className={\r\n                \"unread-badge\" +\r\n                (!props.channel.unreadMentionCount || props.active\r\n                  ? \" invisible\"\r\n                  : \"\")\r\n              }\r\n            >\r\n              {props.channel.unreadMentionCount}\r\n            </span>\r\n          </div>\r\n        }\r\n        content={props.channel.name}\r\n        inverted\r\n        position=\"top center\"\r\n        size=\"tiny\"\r\n        disabled={props.channel.name.length > truncateNameThreshold ? false : true}\r\n      />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SidebarItemChannel;\r\n","class ProfileService {\r\n  constructor() {\r\n    this.localStorageKey = \"ichat.user\";\r\n  }\r\n\r\n  setProfile(profile) {\r\n    localStorage.setItem(this.localStorageKey, JSON.stringify(profile));\r\n  }\r\n\r\n  getProfile() {\r\n    if (!localStorage.getItem(this.localStorageKey)) return null;\r\n    return JSON.parse(localStorage.getItem(this.localStorageKey));\r\n  }\r\n\r\n  getToken() {\r\n    let profile = this.getProfile();\r\n    return profile && profile.token;\r\n  }\r\n}\r\n\r\nexport default ProfileService;\r\n","import ProfileService from \"services/ProfileService\";\r\n\r\nclass ApiService {\r\n  constructor(props) {\r\n    this.props = props;\r\n    this.profileService = new ProfileService();\r\n  }\r\n\r\n  fetchErrorHandler(error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  fetch(url, options, noContentType, noAuth) {\r\n    return this.fetchCommon(url, options, noContentType, noAuth)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.text().then(r => Promise.reject(r));\r\n        }\r\n        if (\r\n          response.headers.get(\"content-type\") &&\r\n          response.headers.get(\"content-type\").includes(\"application/json\")\r\n        ) {\r\n          return response.json();\r\n        } else return response.text();\r\n      })\r\n      .then(result => Promise.resolve(result))\r\n      .catch(this.fetchErrorHandler);\r\n  }\r\n\r\n  fetchFile(url) {\r\n    return this.fetchCommon(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.text().then(r => Promise.reject(r));\r\n        }\r\n        return response.blob();\r\n      })\r\n      .then(blob => URL.createObjectURL(blob))\r\n      .catch(this.fetchErrorHandler);\r\n  }\r\n\r\n  fetchCommon(url, options, noContentType, noAuth) {\r\n    if (!url) {\r\n      return Promise.reject(\"Empty url\");\r\n    }\r\n\r\n    if (!noAuth) {\r\n      var token = this.profileService.getToken();\r\n      if (!token) {\r\n        this.props.history.push(\"/login\");\r\n        return Promise.reject(\"invalid token, taken to login\");\r\n      }\r\n    }\r\n\r\n    var bearer = \"Bearer \" + token;\r\n    options || (options = {});\r\n    options.headers || (options.headers = {});\r\n    noContentType || (options.headers[\"Content-Type\"] = \"application/json\");\r\n    noAuth || (options.headers[\"Authorization\"] = bearer);\r\n\r\n    return fetch(`http://localhost:58314${url}`, options);\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n","import React from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass JoinChannelForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onJoinChannelFormSubmit = this.onJoinChannelFormSubmit.bind(this);\r\n    this.changeSelectedChannel = this.changeSelectedChannel.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      channelList: []\r\n    };\r\n\r\n    this.selectedChannelId = undefined;\r\n  }\r\n\r\n  onJoinChannelFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (!this.selectedChannelId) return;\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    this.apiService\r\n      .fetch(`/api/channels/join`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.selectedChannelId)\r\n      })\r\n      .then(() => {\r\n        this.props.onChannelJoined();\r\n        this.props.history.push(`/channel/${this.selectedChannelId}`);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Join channel failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  changeSelectedChannel(event, item) {\r\n    this.selectedChannelId = item.value;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.apiService.fetch(\"/api/channels/allUnsubscribed\").then(channels => {\r\n      let channelList = channels.map(c => {\r\n        return { key: c.id, text: c.name, value: c.id };\r\n      });\r\n      this.setState({ channelList: channelList });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container form-with-dropdown\">\r\n        <h1 style={{ textAlign: \"center\" }}>Join a channel</h1>\r\n\r\n        <form\r\n          id=\"JoinChannelForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onJoinChannelFormSubmit}\r\n        >\r\n          <p className=\"form-description\">Select a channel to join.</p>\r\n\r\n          <Dropdown\r\n            placeholder=\"Search channel\"\r\n            fluid\r\n            search\r\n            selection\r\n            options={this.state.channelList}\r\n            onChange={this.changeSelectedChannel}\r\n          />\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Join\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinChannelForm;\r\n","import React from \"react\";\r\nimport \"./CloseButton.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nclass CloseButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyup = this.onKeyup.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.onKeyup);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.onKeyup);\r\n  }\r\n\r\n  onKeyup(e) {\r\n    if (e.key === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"close-button\" onClick={this.props.onClose}>\r\n          <div style={{ fontSize: \"1.5rem\" }}>\r\n            <Icon name=\"times\" />\r\n          </div>\r\n          <div>esc</div>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CloseButton;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport CloseButton from \"components/CloseButton\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"lib/simplebar.css\";\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.modalRoot = document.getElementById(\"modal-root\");\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    var modal = (\r\n      <div className=\"modal-panel-container\">\r\n        <div className=\"modal-panel-overlay\">\r\n          <SimpleBar className=\"modal-panel panel\">\r\n            <CloseButton onClose={this.props.onClose} />\r\n            {this.props.children}\r\n          </SimpleBar>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return ReactDOM.createPortal(modal, this.el);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\nimport ProfileService from \"services/ProfileService\";\r\n\r\nclass AuthService {\r\n  constructor(props) {\r\n    this.localStorageKey = \"ichat.user\";\r\n    this.props = props;\r\n    this.apiService = new ApiService(props);\r\n    this.profileService = new ProfileService();\r\n  }\r\n\r\n  login(email, password) {\r\n    return this.apiService\r\n      .fetch(\r\n        `/api/identity/authenticate`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ email: email, password: password })\r\n        },\r\n        false,\r\n        true // no auth\r\n      )\r\n      .then(profile => {\r\n        this.profileService.setProfile(profile);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Login failed: ${error}`);\r\n        return Promise.reject();\r\n      });\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return !!this.profileService.getProfile();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(this.localStorageKey);\r\n    this.props.history.push(\"/login\");\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","import React from \"react\";\r\nimport \"./SidebarItem.css\";\r\nimport JoinChannelForm from \"modalForms/JoinChannelForm\";\r\nimport Modal from \"modals/Modal\";\r\nimport AuthService from \"services/AuthService\";\r\n\r\nclass SidebarItemJoinChannel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.authService = new AuthService(props);\r\n    this.onJoinChannel = this.onJoinChannel.bind(this);\r\n    this.onChannelJoined = this.onChannelJoined.bind(this);\r\n    this.onCloseJoinChannelModal = this.onCloseJoinChannelModal.bind(this);\r\n\r\n    this.state = {\r\n      isJoinChannelModalOpen: false\r\n    };\r\n  }\r\n\r\n  onJoinChannel(event) {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      isJoinChannelModalOpen: true\r\n    });\r\n  }\r\n\r\n  onChannelJoined() {\r\n    this.onCloseJoinChannelModal();\r\n    this.props.onUpdateChannelList();\r\n  }\r\n\r\n  onCloseJoinChannelModal() {\r\n    this.setState({\r\n      isJoinChannelModalOpen: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar-item list-item\">\r\n        <span onClick={this.onJoinChannel}>+&nbsp;Join a channel</span>\r\n        <div>\r\n          {this.state.isJoinChannelModalOpen && (\r\n            <Modal onClose={this.onCloseJoinChannelModal}>\r\n              <JoinChannelForm\r\n                onChannelJoined={this.onChannelJoined}\r\n                {...this.props}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarItemJoinChannel;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass CreateChannelForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onCreateChannelFormSubmit = this.onCreateChannelFormSubmit.bind(this);\r\n    this.apiService = new ApiService(props);\r\n  }\r\n\r\n  onCreateChannelFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    let name = event.target.elements[\"name\"].value;\r\n    let topic = event.target.elements[\"topic\"].value;\r\n\r\n    this.apiService\r\n      .fetch(`/api/channels`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          name: name,\r\n          topic: topic\r\n        })\r\n      })\r\n      .then(id => {\r\n        this.props.onChannelCreated();\r\n        this.props.history.push(`/channel/${id}`);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Create channel failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h1 style={{ textAlign: \"center\" }}>Create a channel</h1>\r\n        <form\r\n          id=\"createChannelForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onCreateChannelFormSubmit}\r\n        >\r\n          <p className=\"form-description\">\r\n            Channels are where specific topics can be talked about.\r\n          </p>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"createChannelName\">Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"createChannelName\"\r\n              name=\"name\"\r\n              placeholder=\"e.g. meetings\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"createChannelTopic\">\r\n              Topic<span className=\"secondary-text\">&nbsp;(optional)</span>\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"createChannelTopic\"\r\n              name=\"topic\"\r\n              placeholder=\"What is this channel about?\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Create Channel\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateChannelForm;\r\n","import React from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass StartConversationForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onStartConversationFormSubmit = this.onStartConversationFormSubmit.bind(\r\n      this\r\n    );\r\n    this.changeConversationUser = this.changeConversationUser.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      userList: []\r\n    };\r\n\r\n    this.conversationUserIds = [];\r\n  }\r\n\r\n  onStartConversationFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (!this.conversationUserIds || this.conversationUserIds.length === 0)\r\n      return;\r\n\r\n     let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    this.apiService\r\n      .fetch(`/api/conversations/start`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.conversationUserIds)\r\n      })\r\n      .then(id => {\r\n        this.props.onConversationStarted();\r\n        this.props.history.push(`/conversation/${id}`);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Start conversation failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  changeConversationUser(event, item) {\r\n    this.conversationUserIds = item.value;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.apiService.fetch(\"/api/users\").then(users => {\r\n      let currentUserId = this.props.userProfile.id;\r\n      let userList = users\r\n        .filter(u => u.id !== currentUserId)\r\n        .map(u => {\r\n          return { key: u.id, text: u.displayName, value: u.id };\r\n        });\r\n      this.setState({ userList: userList });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container form-with-dropdown\">\r\n        <h1 style={{ textAlign: \"center\" }}>Start conversation</h1>\r\n\r\n        <form\r\n          id=\"StartConversationForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onStartConversationFormSubmit}\r\n        >\r\n          <p className=\"form-description\">\r\n            Select people you want to have a conversation with.\r\n          </p>\r\n\r\n          <Dropdown\r\n            placeholder=\"Search user\"\r\n            fluid\r\n            multiple\r\n            search\r\n            selection\r\n            options={this.state.userList}\r\n            onChange={this.changeConversationUser}\r\n          />\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Go\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartConversationForm;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarItemConversation from \"./SidebarItem.Conversation\";\r\nimport SidebarItemChannel from \"./SidebarItem.Channel\";\r\nimport SidebarItemJoinChannel from \"./SidebarItem.JoinChannel\";\r\nimport Modal from \"modals/Modal\";\r\nimport CreateChannelForm from \"modalForms/CreateChannelForm\";\r\nimport StartConversationForm from \"modalForms/StartConversationForm\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"lib/simplebar.css\";\r\nimport { Loader, Image, Segment } from \"semantic-ui-react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.onCreateChannel = this.onCreateChannel.bind(this);\r\n    this.onCloseCreateChannel = this.onCloseCreateChannel.bind(this);\r\n    this.onChannelCreated = this.onChannelCreated.bind(this);\r\n    this.onStartConversation = this.onStartConversation.bind(this);\r\n    this.onCloseStartConversation = this.onCloseStartConversation.bind(this);\r\n    this.onConversationStarted = this.onConversationStarted.bind(this);\r\n    this.onUpdateChannelList = this.onUpdateChannelList.bind(this);\r\n    this.onUpdateConversationList = this.onUpdateConversationList.bind(this);\r\n\r\n    if (props.hubConnection) {\r\n      props.hubConnection.on(\r\n        \"ChannelMessageItemChanged\",\r\n        this.onUpdateChannelList\r\n      );\r\n      props.hubConnection.on(\r\n        \"ConversationMessageItemChanged\",\r\n        this.onUpdateConversationList\r\n      );\r\n      props.hubConnection.on(\"UnreadChannelMessageCleared\", this.onUpdateChannelList);\r\n      props.hubConnection.on(\r\n        \"UnreadConversationMessageCleared\",\r\n        this.onUpdateConversationList\r\n      );\r\n      props.hubConnection.on(\r\n        \"ConversationUserListChanged\",\r\n        this.onUpdateConversationList\r\n      );\r\n      props.hubConnection.on(\"UserWentOnline\", this.onUpdateConversationList);\r\n      props.hubConnection.on(\"UserStatusChanged\", this.onUpdateConversationList);\r\n    }\r\n\r\n    this.state = {\r\n      channels: [],\r\n      conversations: [],\r\n      isCreateChannelModalOpen: false,\r\n      isPageLoading: true\r\n    };\r\n  }\r\n\r\n  onCreateChannel(event) {\r\n    this.setState({\r\n      isCreateChannelModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseCreateChannel() {\r\n    this.setState({\r\n      isCreateChannelModalOpen: false\r\n    });\r\n  }\r\n\r\n  onChannelCreated() {\r\n    this.onCloseCreateChannel();\r\n    this.fetchChannels();\r\n  }\r\n\r\n  onUpdateChannelList() {\r\n    this.fetchChannels();\r\n  }\r\n\r\n  onStartConversation(event) {\r\n    this.setState({\r\n      isStartConversationModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseStartConversation() {\r\n    this.setState({\r\n      isStartConversationModalOpen: false\r\n    });\r\n  }\r\n\r\n  onConversationStarted() {\r\n    this.onCloseStartConversation();\r\n    this.fetchConversations();\r\n  }\r\n\r\n  onUpdateConversationList() {\r\n    this.fetchConversations();\r\n  }\r\n\r\n  fetchChannels() {\r\n    return this.apiService\r\n      .fetch(\"/api/channels/forUser\")\r\n      .then(channels => this.setState({ channels }));\r\n  }\r\n\r\n  fetchConversations() {\r\n    return this.apiService\r\n      .fetch(\"/api/conversations/recent\")\r\n      .then(conversations => this.setState({ conversations: conversations }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([this.fetchChannels(), this.fetchConversations()]).then(() => {\r\n      this.setState({ isPageLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sidebar\">\r\n        {this.state.isPageLoading && (\r\n          <Segment>\r\n            <Loader active />\r\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n          </Segment>\r\n        )}\r\n        <SimpleBar className=\"sidebar-scrollable\">\r\n          <section>\r\n            <div className=\"section-title\">\r\n              <span>CHANNELS</span>\r\n              <Popup\r\n                trigger={\r\n                  <Icon\r\n                    name=\"plus circle\"\r\n                    className=\"icon-circle\"\r\n                    onClick={this.onCreateChannel}\r\n                  />\r\n                }\r\n                content=\"Create a channel\"\r\n                inverted\r\n                position=\"bottom center\"\r\n                size=\"tiny\"\r\n              />\r\n            </div>\r\n            {this.state.channels.map(c => {\r\n              let active = false;\r\n              if (this.props.isChannel && this.props.id === c.id) active = true;\r\n              return (\r\n                <SidebarItemChannel key={c.id} channel={c} active={active} />\r\n              );\r\n            })}\r\n            <div>\r\n              {this.state.isCreateChannelModalOpen && (\r\n                <Modal onClose={this.onCloseCreateChannel}>\r\n                  <CreateChannelForm\r\n                    onChannelCreated={this.onChannelCreated}\r\n                    {...this.props}\r\n                  />\r\n                </Modal>\r\n              )}\r\n            </div>\r\n          </section>\r\n\r\n          <section>\r\n            <SidebarItemJoinChannel\r\n              onUpdateChannelList={this.onUpdateChannelList}\r\n              {...this.props}\r\n            />\r\n          </section>\r\n\r\n          <section>\r\n            <div className=\"section-title\">\r\n              <span>DIRECT MESSAGES</span>\r\n              <Popup\r\n                trigger={\r\n                  <Icon\r\n                    name=\"plus circle\"\r\n                    className=\"icon-circle\"\r\n                    onClick={this.onStartConversation}\r\n                  />\r\n                }\r\n                content=\"Start a conversation\"\r\n                inverted\r\n                position=\"top center\"\r\n                size=\"tiny\"\r\n              />\r\n            </div>\r\n            {this.state.conversations.map(c => {\r\n              let active = false;\r\n              if (!this.props.isChannel && this.props.id === c.id)\r\n                active = true;\r\n              return (\r\n                <SidebarItemConversation\r\n                  key={c.id}\r\n                  conversation={c}\r\n                  active={active}\r\n                />\r\n              );\r\n            })}\r\n            <div>\r\n              {this.state.isStartConversationModalOpen && (\r\n                <Modal onClose={this.onCloseStartConversation}>\r\n                  <StartConversationForm\r\n                    onConversationStarted={this.onConversationStarted}\r\n                    {...this.props}\r\n                  />\r\n                </Modal>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </SimpleBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass DropdownModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onOverlayClick = this.onOverlayClick.bind(this);\r\n\r\n    this.dropdownModalRoot = document.getElementById(\"dropdown-modal-root\");\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  onOverlayClick(event) {\r\n    if (!event.target.closest(\".dropdown-modal-panel\")) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dropdownModalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.dropdownModalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    var modal = (\r\n      <div className=\"dropdown-modal-panel-container\">\r\n        <div\r\n          className=\"dropdown-modal-panel-overlay page-overlay\"\r\n          onClick={this.onOverlayClick}\r\n        >\r\n          <div className=\"dropdown-modal-panel\">{this.props.children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return ReactDOM.createPortal(modal, this.el);\r\n  }\r\n}\r\n\r\nexport default DropdownModal;\r\n","import React from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass InviteOtherMembersForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onInviteOtherMembersFormSubmit = this.onInviteOtherMembersFormSubmit.bind(\r\n      this\r\n    );\r\n    this.changeInviteMembers = this.changeInviteMembers.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      userList: []\r\n    };\r\n\r\n    this.inviteMembersUserIds = [];\r\n  }\r\n\r\n  onInviteOtherMembersFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (!this.inviteMembersUserIds || this.inviteMembersUserIds.length === 0)\r\n      return;\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    let url = `/api/${this.props.isChannel ? \"channels\" : \"conversations\"}/${\r\n      this.props.id\r\n    }/inviteOtherMembers`;\r\n\r\n    this.apiService\r\n      .fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.inviteMembersUserIds)\r\n      })\r\n      .then(id => {\r\n        this.props.onClose();\r\n        if (!this.props.isChannel && id !== this.props.id) {\r\n          // when conversation already exists, redirect to it\r\n          this.props.history.push(`/conversation/${id}`);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Invite other members failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  changeInviteMembers(event, item) {\r\n    this.inviteMembersUserIds = item.value;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let allUsersPromise = this.apiService.fetch(\"/api/users\");\r\n    let memberIdsPromise = this.apiService.fetch(\r\n      `/api/${this.props.isChannel ? \"channels\" : \"conversations\"}/${\r\n        this.props.id\r\n      }/userIds`\r\n    );\r\n\r\n    Promise.all([allUsersPromise, memberIdsPromise]).then(\r\n      ([users, memberIds]) => {\r\n        let userList = users\r\n          .filter(u => memberIds.every(id => id !== u.id))\r\n          .map(u => {\r\n            return { key: u.id, text: u.displayName, value: u.id };\r\n          });\r\n        this.setState({ userList: userList });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container form-with-dropdown\">\r\n        <h1 style={{ textAlign: \"center\" }}>Invite other members</h1>\r\n\r\n        <form\r\n          id=\"InviteOtherMembersForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onInviteOtherMembersFormSubmit}\r\n        >\r\n          <p className=\"form-description\">\r\n            Select people you want to invite to this\r\n            {this.props.isChannel ? \" channel\" : \" conversation\"}.\r\n          </p>\r\n\r\n          <Dropdown\r\n            placeholder=\"Search user\"\r\n            fluid\r\n            multiple\r\n            search\r\n            selection\r\n            options={this.state.userList}\r\n            onChange={this.changeInviteMembers}\r\n          />\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Go\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InviteOtherMembersForm;\r\n","import React from \"react\";\r\nimport \"./ShowMemberListForm.css\";\r\n\r\nclass ShowMemberListForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container form-with-dropdown\">\r\n        <h1 style={{ textAlign: \"center\" }}>Member List</h1>\r\n\r\n        <form id=\"showMemberListForm\">\r\n          {this.props.memberList.map(u => (\r\n            <div\r\n              className=\"member-list-item\"\r\n              key={u.id}\r\n              onClick={event =>\r\n                this.props.onOpenUserPopup(event.currentTarget, u.id)\r\n              }\r\n            >\r\n              <img className=\"user-identicon\" src={u.identiconPath} />\r\n              <b>{u.displayName}</b>\r\n            </div>\r\n          ))}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowMemberListForm;\r\n","import React from \"react\";\r\nimport \"./InvitePeopleForm.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass InvitePeopleForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.addAnotherEmail = this.addAnotherEmail.bind(this);\r\n    this.removeEmail = this.removeEmail.bind(this);\r\n    this.onEmailFormSubmit = this.onEmailFormSubmit.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      emailsToInvite: [\"\", \"\", \"\"]\r\n    };\r\n  }\r\n\r\n  addAnotherEmail() {\r\n    let emails = this.state.emailsToInvite;\r\n    emails.push(\"\");\r\n    this.setState({\r\n      emailsToInvite: emails\r\n    });\r\n  }\r\n\r\n  removeEmail(index) {\r\n    let emails = this.state.emailsToInvite;\r\n    emails.splice(index, 1);\r\n    this.setState({\r\n      emailsToInvite: emails\r\n    });\r\n  }\r\n\r\n  onEmailFormSubmit(event) {\r\n    event.preventDefault();\r\n    let emails = this.state.emailsToInvite.filter(e => e && !!e.trim());\r\n    if (emails.length === 0) return;\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    this.apiService\r\n      .fetch(`/api/users/invite`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(emails)\r\n      })\r\n      .then(() => {\r\n        toast.success(\"Invitation email sent!\");\r\n        this.props.onClose();\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Send Invitation failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  handleChange(event, index) {\r\n    let emails = this.state.emailsToInvite;\r\n    emails[index] = event.target.value;\r\n    this.setState({\r\n      emailsToInvite: emails\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Invite People to {this.props.userProfile.workspaceName}\r\n        </h1>\r\n        <form id=\"emailForm\" method=\"post\" onSubmit={this.onEmailFormSubmit}>\r\n          <p className=\"form-description\">Enter email addresses to invite.</p>\r\n          {this.state.emailsToInvite.map((e, index) => {\r\n            return (\r\n              <div key={index} className=\"email-row\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={e}\r\n                  onChange={event => this.handleChange(event, index)}\r\n                />\r\n                {this.state.emailsToInvite.length > 1 && (\r\n                  <Popup\r\n                    trigger={\r\n                      <Icon\r\n                        name=\"times\"\r\n                        className=\"icon-times\"\r\n                        onClick={() => this.removeEmail(index)}\r\n                      />\r\n                    }\r\n                    content=\"Remove this email\"\r\n                    inverted\r\n                    position=\"right center\"\r\n                    size=\"tiny\"\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n          <div onClick={this.addAnotherEmail} className=\"add-email\">\r\n            <Icon name=\"plus circle\" className=\"icon-circle\" />\r\n            <span>Add another</span>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Send Invitation\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InvitePeopleForm;\r\n","import React from \"react\";\r\nimport \"./SetStatusForm.css\";\r\nimport UserStatus from \"services/UserStatusService\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass SetStatusForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSetStatusFormSubmit = this.onSetStatusFormSubmit.bind(this);\r\n    this.apiService = new ApiService(props);\r\n    this.statusList = new UserStatus().getStatusList();\r\n\r\n    this.state = {\r\n      selectedStatus: undefined\r\n    };\r\n  }\r\n\r\n  onSetStatusFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (!this.state.selectedStatus) return;\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    this.apiService\r\n      .fetch(`/api/users/status`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state.selectedStatus)\r\n      })\r\n      .then(id => {\r\n        this.props.onClose();\r\n        this.props.onSelect();\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Save status failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  onSelectStatus(status) {\r\n    this.selectedStatus = status;\r\n    this.setState({ selectedStatus: status });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h1 style={{ textAlign: \"center\" }}>Set a status</h1>\r\n        <form\r\n          id=\"setStatusForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onSetStatusFormSubmit}\r\n        >\r\n          <p className=\"form-description\">\r\n            Set your status by clicking one of the following:\r\n          </p>\r\n          <ul className=\"status-list\">\r\n            {this.statusList.map(s => {\r\n              let selected = false;\r\n              if (s.value === this.state.selectedStatus) selected = true;\r\n              return (\r\n                <li\r\n                  key={s.value}\r\n                  className={selected ? \"selected-status\" : \"\"}\r\n                  onClick={() => this.onSelectStatus(s.value)}\r\n                >\r\n                  {s.name}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Save\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SetStatusForm;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass EditProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onEditProfileFormSubmit = this.onEditProfileFormSubmit.bind(this);\r\n    this.apiService = new ApiService(props);\r\n    this.displayName = undefined;\r\n    this.phoneNumber = undefined;\r\n    this.state = {\r\n      displayName: props.userProfile.displayName || \"\",\r\n      phoneNumber: props.userProfile.phoneNumber || \"\"\r\n    };\r\n  }\r\n\r\n  onEditProfileFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    let name = event.target.elements[\"displayName\"].value;\r\n    let phoneNumber = event.target.elements[\"phoneNumber\"].value;\r\n\r\n    this.apiService\r\n      .fetch(`/api/users/editProfile`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ displayName: name, phoneNumber: phoneNumber })\r\n      })\r\n      .then(() => {\r\n        this.props.onClose();\r\n        this.props.onProfileUpdated();\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Edit profile failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container edit-profile-form\">\r\n        <h1 style={{ textAlign: \"center\" }}>Edit profile</h1>\r\n\r\n        <form\r\n          id=\"EditProfileForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onEditProfileFormSubmit}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"displayName\">Display Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"displayName\"\r\n              name=\"displayName\"\r\n              placeholder=\"Display name\"\r\n              value={this.state.displayName}\r\n              onChange={event =>\r\n                this.setState({ displayName: event.target.value })\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"telephone\">Phone Number</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              placeholder=\"Phone Number\"\r\n              pattern=\"[0-9-]*\"\r\n              title=\"Phone number can only contain numbers and '-'\"\r\n              value={this.state.phoneNumber}\r\n              onChange={event =>\r\n                this.setState({ phoneNumber: event.target.value })\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfileForm;\r\n","import React from \"react\";\r\nimport \"./ContentHeaderUserInfo.css\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport Modal from \"modals/Modal\";\r\nimport DropdownModal from \"modals/DropdownModal\";\r\nimport InvitePeopleForm from \"modalForms/InvitePeopleForm\";\r\nimport SetStatusForm from \"modalForms/SetStatusForm\";\r\nimport EditProfileForm from \"modalForms/EditProfileForm\";\r\nimport AuthService from \"services/AuthService\";\r\nimport UserStatusService from \"services/UserStatusService\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass ContentHeaderUserInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onHeaderClick = this.onHeaderClick.bind(this);\r\n    this.onCloseDropdown = this.onCloseDropdown.bind(this);\r\n    this.onInvitePeople = this.onInvitePeople.bind(this);\r\n    this.onCloseInvitePeople = this.onCloseInvitePeople.bind(this);\r\n    this.onCloseEditProfile = this.onCloseEditProfile.bind(this);\r\n    this.onSetStatus = this.onSetStatus.bind(this);\r\n    this.onEditProfile = this.onEditProfile.bind(this);\r\n    this.onClearStatus = this.onClearStatus.bind(this);\r\n    this.onCloseSetStatus = this.onCloseSetStatus.bind(this);\r\n    this.onLogout = this.onLogout.bind(this);\r\n    this.authService = new AuthService(props);\r\n    this.apiService = new ApiService(props);\r\n    this.userStatusService = new UserStatusService();\r\n\r\n    this.state = {\r\n      isInvitePeopleModalOpen: false,\r\n      isSetStatusModalOpen: false,\r\n      isEditProfileModalOpen: false,\r\n      isDropdownModalOpen: false\r\n    };\r\n  }\r\n\r\n  onHeaderClick(event) {\r\n    this.setState({\r\n      isDropdownModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseDropdown(event) {\r\n    this.setState({\r\n      isDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onInvitePeople(event) {\r\n    this.setState({\r\n      isInvitePeopleModalOpen: true,\r\n      isDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onCloseInvitePeople(event) {\r\n    this.setState({\r\n      isInvitePeopleModalOpen: false\r\n    });\r\n  }\r\n\r\n  onSetStatus(event) {\r\n    this.setState({\r\n      isSetStatusModalOpen: true,\r\n      isDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onEditProfile(event) {\r\n    this.setState({\r\n      isEditProfileModalOpen: true,\r\n      isDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onClearStatus(event) {\r\n    this.apiService\r\n      .fetch(`/api/users/clearStatus`, {\r\n        method: \"POST\"\r\n      })\r\n      .then(id => {\r\n        this.props.onUserSessionDataChange();\r\n        this.setState({\r\n          isDropdownModalOpen: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Clear status failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onCloseSetStatus(event) {\r\n    this.setState({\r\n      isSetStatusModalOpen: false\r\n    });\r\n  }\r\n\r\n  onCloseEditProfile(event) {\r\n    this.setState({\r\n      isEditProfileModalOpen: false\r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header-user-info\">\r\n          <div\r\n            className=\"header-user-info-container\"\r\n            onClick={this.onHeaderClick}\r\n          >\r\n            <div>\r\n              <Icon name=\"chevron down\" />\r\n              <span className=\"header-user-info-workspace-name\">\r\n                {this.props.userProfile.workspaceName}\r\n              </span>\r\n            </div>\r\n            <div className=\"header-user-info-user-name\">\r\n              {this.props.userProfile.displayName}\r\n              {(() => {\r\n                if (this.userStatusService.isNotActive(this.props.userStatus)) {\r\n                  let statusName = this.userStatusService.getStatusName(\r\n                    this.props.userStatus\r\n                  );\r\n                  return (\r\n                    <Popup\r\n                      trigger={<Icon name=\"flag\" className=\"status-icon\" />}\r\n                      content={statusName}\r\n                      inverted\r\n                      position=\"top right\"\r\n                      size=\"tiny\"\r\n                    />\r\n                  );\r\n                }\r\n              })()}\r\n            </div>\r\n          </div>\r\n          {this.state.isDropdownModalOpen && (\r\n            <DropdownModal onClose={this.onCloseDropdown}>\r\n              <div className=\"header-user-info-dropdown dropdown-container panel\">\r\n                <section className=\"dropdown-section\">\r\n                  <div className=\"dropdown-section-header\">\r\n                    <img\r\n                      className=\"user-identicon\"\r\n                      src={this.props.userProfile.identiconPath}\r\n                    />\r\n                    {this.props.userProfile.displayName}\r\n                  </div>\r\n                  <ul>\r\n                    {this.userStatusService.isNotActive(\r\n                      this.props.userStatus\r\n                    ) ? (\r\n                      <li onClick={this.onClearStatus}>Clear status</li>\r\n                    ) : (\r\n                      <li onClick={this.onSetStatus}>Set status</li>\r\n                    )}\r\n\r\n                    <li onClick={this.onEditProfile}>Profile</li>\r\n                  </ul>\r\n                </section>\r\n                <section className=\"dropdown-section\">\r\n                  <div className=\"dropdown-section-header\">\r\n                    {this.props.userProfile.workspaceName}\r\n                  </div>\r\n                  <ul>\r\n                    <li onClick={this.onInvitePeople}>Invite people</li>\r\n                    <li onClick={this.onLogout}>\r\n                      Log out of {this.props.userProfile.workspaceName}\r\n                    </li>\r\n                  </ul>\r\n                </section>\r\n              </div>\r\n            </DropdownModal>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {this.state.isSetStatusModalOpen && (\r\n            <Modal onClose={this.onCloseSetStatus}>\r\n              <SetStatusForm\r\n                onClose={this.onCloseSetStatus}\r\n                onSelect={this.props.onUserSessionDataChange}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {this.state.isEditProfileModalOpen && (\r\n            <Modal onClose={this.onCloseEditProfile}>\r\n              <EditProfileForm\r\n                userProfile={this.props.userProfile}\r\n                onClose={this.onCloseEditProfile}\r\n                onProfileUpdated={this.props.onProfileUpdated}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {this.state.isInvitePeopleModalOpen && (\r\n            <Modal onClose={this.onCloseInvitePeople}>\r\n              <InvitePeopleForm\r\n                userProfile={this.props.userProfile}\r\n                onClose={this.onCloseInvitePeople}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentHeaderUserInfo;\r\n","import React from \"react\";\r\nimport \"./ContentHeaderSettings.css\";\r\nimport ApiService from \"services/ApiService\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport DropdownModal from \"modals/DropdownModal\";\r\nimport Modal from \"modals/Modal\";\r\nimport { toast } from \"react-toastify\";\r\nimport InviteOtherMembersForm from \"modalForms/InviteOtherMembersForm\";\r\nimport ShowMemberListForm from \"modalForms/ShowMemberListForm\";\r\n\r\nclass ContentHeaderSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.onSettingButtonClicked = this.onSettingButtonClicked.bind(this);\r\n    this.onCloseSettingDropdown = this.onCloseSettingDropdown.bind(this);\r\n    this.onLeaveChannelClicked = this.onLeaveChannelClicked.bind(this);\r\n    this.onInviteOtherMembers = this.onInviteOtherMembers.bind(this);\r\n    this.onCloseInviteOtherMembers = this.onCloseInviteOtherMembers.bind(this);\r\n    this.onShowMemberList = this.onShowMemberList.bind(this);\r\n    this.onCloseShowMemberList = this.onCloseShowMemberList.bind(this);\r\n\r\n    this.state = {\r\n      isSettingDropdownModalOpen: false,\r\n      isInviteOtherMembersModalOpen: false,\r\n      isShowMemberListModalOpen: false\r\n    };\r\n  }\r\n\r\n  onSettingButtonClicked() {\r\n    this.setState({\r\n      isSettingDropdownModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseSettingDropdown() {\r\n    this.setState({\r\n      isSettingDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onLeaveChannelClicked() {\r\n    let defaultChannelId = this.props.userProfile.defaultChannelId;\r\n    this.apiService\r\n      .fetch(`/api/channels/leave`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.props.id)\r\n      })\r\n      .then(id => {\r\n        this.onCloseSettingDropdown();\r\n        this.props.history.push(`/channel/${defaultChannelId}`);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Leave channel failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onInviteOtherMembers() {\r\n    this.setState({\r\n      isInviteOtherMembersModalOpen: true,\r\n      isSettingDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onCloseInviteOtherMembers() {\r\n    this.setState({\r\n      isInviteOtherMembersModalOpen: false\r\n    });\r\n  }\r\n\r\n  onShowMemberList() {\r\n    this.setState({\r\n      isShowMemberListModalOpen: true,\r\n      isSettingDropdownModalOpen: false\r\n    });\r\n  }\r\n\r\n  onCloseShowMemberList() {\r\n    this.setState({\r\n      isShowMemberListModalOpen: false\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.isChannel !== prevProps.isChannel ||\r\n      this.props.id !== prevProps.id\r\n    ) {\r\n      this.onCloseShowMemberList();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content-header-settings-container\">\r\n        <span onClick={this.onSettingButtonClicked}>\r\n          <Popup\r\n            trigger={<Icon name=\"setting\" className=\"icon-setting\" />}\r\n            content={`${\r\n              this.props.isChannel ? \"Channel\" : \"Conversation\"\r\n            } settings`}\r\n            inverted\r\n            position=\"bottom center\"\r\n            size=\"tiny\"\r\n          />\r\n        </span>\r\n        {this.state.isSettingDropdownModalOpen && (\r\n          <DropdownModal onClose={this.onCloseSettingDropdown}>\r\n            <div className=\"setting-dropdown dropdown-container panel\">\r\n              <section className=\"dropdown-section\">\r\n                <ul>\r\n                  <li onClick={this.onShowMemberList}>Show member list</li>\r\n                  {(this.props.isChannel ||\r\n                    (!this.props.selectedConversation.isPrivate &&\r\n                      !this.props.selectedConversation.isSelfConversation)) && (\r\n                    <li onClick={this.onInviteOtherMembers}>\r\n                      {this.props.isChannel\r\n                        ? `Invite people to ${this.props.selectedChannel.name}`\r\n                        : `Invite another member`}\r\n                    </li>\r\n                  )}\r\n                  {this.props.isChannel &&\r\n                    this.props.id !==\r\n                      this.props.userProfile.defaultChannelId && (\r\n                      <li onClick={this.onLeaveChannelClicked}>{`Leave ${\r\n                        this.props.selectedChannel.name\r\n                      }`}</li>\r\n                    )}\r\n                </ul>\r\n              </section>\r\n            </div>\r\n          </DropdownModal>\r\n        )}\r\n        <div>\r\n          {this.state.isInviteOtherMembersModalOpen && (\r\n            <Modal onClose={this.onCloseInviteOtherMembers}>\r\n              <InviteOtherMembersForm\r\n                onClose={this.onCloseInviteOtherMembers}\r\n                {...this.props}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {this.state.isShowMemberListModalOpen && (\r\n            <Modal onClose={this.onCloseShowMemberList}>\r\n              <ShowMemberListForm\r\n                memberList={this.props.messageChannelUserList}\r\n                onOpenUserPopup={this.props.onOpenUserPopup}\r\n                onClose={this.onCloseShowMemberList}\r\n                {...this.props}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentHeaderSettings;\r\n","import React from \"react\";\r\nimport \"./ContentHeader.css\";\r\nimport ApiService from \"services/ApiService\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport DropdownModal from \"modals/DropdownModal\";\r\nimport Modal from \"modals/Modal\";\r\nimport { toast } from \"react-toastify\";\r\nimport InviteOtherMembersForm from \"modalForms/InviteOtherMembersForm\";\r\nimport ShowMemberListForm from \"modalForms/ShowMemberListForm\";\r\nimport ContentHeaderUserInfo from \"./ContentHeaderUserInfo\";\r\nimport ContentHeaderSettings from \"./ContentHeaderSettings\";\r\n\r\nclass ContentHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fetchData = this.fetchData.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    if (props.hubConnection) {\r\n      props.hubConnection.on(\"ConversationUserListChanged\", () =>\r\n        this.fetchData(this.props)\r\n      );\r\n    }\r\n\r\n    this.state = {\r\n      selectedChannel: {},\r\n      selectedConversation: {}\r\n    };\r\n  }\r\n\r\n  fetchData(props) {\r\n    if (props.isChannel) {\r\n      this.apiService\r\n        .fetch(`/api/channels/${props.id}`)\r\n        .then(channel => this.setState({ selectedChannel: channel }));\r\n    } else {\r\n      this.apiService\r\n        .fetch(`/api/conversations/${props.id}`)\r\n        .then(conversation =>\r\n          this.setState({ selectedConversation: conversation })\r\n        );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData(this.props);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.isChannel !== prevProps.isChannel ||\r\n      this.props.id !== prevProps.id\r\n    ) {\r\n      this.fetchData(this.props);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content-header\">\r\n        <div className=\"content-header-details\">\r\n          <div className=\"content-header-name\">\r\n            {this.props.isChannel\r\n              ? this.state.selectedChannel.name\r\n              : this.state.selectedConversation.name}\r\n            <div className=\"content-header-settings\">\r\n              <ContentHeaderSettings\r\n                selectedChannel={this.state.selectedChannel}\r\n                selectedConversation={this.state.selectedConversation}\r\n                {...this.props}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"content-header-topic\">\r\n            {this.props.isChannel ? this.state.selectedChannel.topic : \"\"}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ContentHeaderUserInfo {...this.props} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentHeader;\r\n","import { EmojiConvertor } from \"emoji-js\";\r\n\r\nclass EmojiService {\r\n  convertColonsToHtml(colons){    \r\n    var emoji = new EmojiConvertor();\r\n    emoji.img_sets.google.path =\r\n      \"https://unpkg.com/emoji-datasource-google@4.0.4/img/google/sheets-256/\";\r\n    emoji.img_sets.google.sheet =\r\n      \"https://unpkg.com/emoji-datasource-google@4.0.4/img/google/sheets-256/64.png\";\r\n    emoji.img_set = \"google\";\r\n    emoji.use_sheet = true;\r\n\r\n    return emoji.replace_colons(colons);\r\n  }\r\n}\r\n\r\nexport default EmojiService;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass BlankModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.modalRoot = document.getElementById(\"blank-modal-root\");\r\n    this.el = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    var modal = (\r\n      <div className=\"blank-modal-panel\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n\r\n    return ReactDOM.createPortal(modal, this.el);\r\n  }\r\n}\r\n\r\nexport default BlankModal;\r\n","import React from \"react\";\r\nimport BlankModal from \"modals/BlankModal\";\r\n\r\nclass BlankModalWithPageOverlay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.closePopup = this.closePopup.bind(this);\r\n    this.onKeyup = this.onKeyup.bind(this);\r\n  }\r\n\r\n  closePopup() {\r\n    this.props.onClose();\r\n  }\r\n\r\n  onKeyup(event) {\r\n    if (\r\n      !event.ctrlKey &&\r\n      !event.shiftKey &&\r\n      !event.altKey &&\r\n      event.keyCode === 27\r\n    ) {\r\n      // esc pressed\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  calculatePostion() {\r\n    let gap = 10;\r\n    let popup = document.querySelector(\".page-overlay-content\");\r\n    let popupContent = popup.firstChild;\r\n    let popupContentRect = popupContent.getBoundingClientRect();\r\n    let targetRect = this.props.clickedTarget.getBoundingClientRect();\r\n    let top = targetRect.bottom - popupContentRect.height;\r\n    let left = targetRect.right + gap;\r\n    let contentHeaderHeight = document.querySelector(\".content-header\")\r\n      .offsetHeight;\r\n    let translateY = 0;\r\n    let translateX = 0;\r\n    if (top < contentHeaderHeight) translateY = contentHeaderHeight - top + gap;\r\n    if (left + popupContentRect.right > window.innerWidth)\r\n      translateX = window.innerWidth - (left + popupContentRect.right) - gap;\r\n\r\n    popup.setAttribute(\r\n      \"style\",\r\n      `top:${top}px; left: ${left}px; visibility: visible; transform: translate(${translateX}px, ${translateY}px)`\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.onKeyup);\r\n    this.calculatePostion();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.onKeyup);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BlankModal>\r\n        <div>\r\n          <div className=\"page-overlay\" onClick={this.closePopup} />\r\n          <div className=\"page-overlay-content invisible\">\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n      </BlankModal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlankModalWithPageOverlay;\r\n","import React from \"react\";\r\nimport EmojiService from \"services/EmojiService\";\r\nimport \"lib/emoji.css\";\r\nimport { NimblePicker } from \"emoji-mart\";\r\nimport \"lib/emoji-mart.css\";\r\nimport data from \"emoji-mart/data/google.json\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport \"./EmojiPicker.css\";\r\nimport BlankModalWithPageOverlay from \"modals/BlankModalWithPageOverlay\";\r\n\r\nclass EmojiPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.emojiService = new EmojiService();\r\n    this.onEmojiIconClick = this.onEmojiIconClick.bind(this);\r\n    this.closeEmoji = this.closeEmoji.bind(this);\r\n    this.addEmoji = this.addEmoji.bind(this);\r\n\r\n    this.state = {\r\n      isEmojiOpen: false\r\n    };\r\n  }\r\n\r\n  onEmojiIconClick(event) {\r\n    this.clickedTarget = event.currentTarget;\r\n    this.setState({ isEmojiOpen: true });\r\n  }\r\n\r\n  closeEmoji() {\r\n    this.setState({ isEmojiOpen: false }, () => {\r\n      this.clickedTarget = undefined;\r\n      if (this.props.onClose) this.props.onClose();\r\n    });\r\n  }\r\n\r\n  addEmoji(event) {\r\n    this.setState({ isEmojiOpen: false });\r\n\r\n    if (this.props.onEmojiHtmlAdded) {\r\n      var imgHtml = this.emojiService.convertColonsToHtml(event.colons);\r\n      this.props.onEmojiHtmlAdded(imgHtml);\r\n    }\r\n    if (this.props.onEmojiColonsAdded)\r\n      this.props.onEmojiColonsAdded(event.colons);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"emoji-picker-root\">\r\n        <Popup\r\n          trigger={\r\n            <Icon\r\n              name=\"smile outline\"\r\n              className=\"icon-emoji\"\r\n              onClick={this.onEmojiIconClick}\r\n            />\r\n          }\r\n          content={this.props.tooltipText}\r\n          inverted\r\n          position=\"top center\"\r\n          size=\"tiny\"\r\n        />\r\n\r\n        {this.state.isEmojiOpen && (\r\n          <div className=\"emoji-picker-container\">\r\n            <BlankModalWithPageOverlay\r\n              clickedTarget={this.clickedTarget}\r\n              onClose={this.closeEmoji}\r\n            >\r\n              <NimblePicker set=\"google\" data={data} onSelect={this.addEmoji} />\r\n            </BlankModalWithPageOverlay>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmojiPicker;\r\n","import React from \"react\";\r\nimport \"./ContentMessageItem.UserReactions.css\";\r\nimport EmojiService from \"services/EmojiService\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport ApiService from \"services/ApiService\";\r\nimport EmojiPicker from \"components/EmojiPicker\";\r\n\r\nclass ContentMessageItemUserReactions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.emojiService = new EmojiService();\r\n    this.onReactionClicked = this.onReactionClicked.bind(this);\r\n    this.onEmojiColonsSelected = this.onEmojiColonsSelected.bind(this);\r\n    this.onEmojiClose = this.onEmojiClose.bind(this);\r\n  }\r\n\r\n  onReactionClicked(reaction) {\r\n    if (this.reactionClicked === true) return;\r\n    this.reactionClicked = true;\r\n    let reactedByUser = reaction.users.some(\r\n      u => u.id === this.props.userProfile.id\r\n    );\r\n    if (reactedByUser) this.props.onEmojiColonsRemoved(reaction.emojiColons);\r\n    else this.props.onEmojiColonsAdded(reaction.emojiColons);\r\n  }\r\n\r\n  onEmojiColonsSelected(colons) {\r\n    if (this.reactionClicked === true) return;\r\n    this.reactionClicked = true;\r\n    let reaction = this.props.reactions.find(r => r.emojiColons === colons);\r\n    if (reaction) this.onReactionClicked(reaction);\r\n    else this.props.onEmojiColonsAdded(colons);\r\n  }\r\n\r\n  onHoverMessageReactions(event) {\r\n    event.currentTarget.classList.add(\"message-reactions-hover\");\r\n  }\r\n\r\n  onLeaveMessageReactions(event) {\r\n    event.currentTarget.classList.remove(\"message-reactions-hover\");\r\n  }\r\n\r\n  onEmojiClose() {\r\n    let currentMessageReactions = document.querySelector(\r\n      \".message-reactions-hover\"\r\n    );\r\n    currentMessageReactions &&\r\n      currentMessageReactions.classList.remove(\"message-reactions-hover\");\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.reactions !== prevProps.reactions) {\r\n      this.reactionClicked = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"message-reactions\"\r\n        onMouseOver={this.onHoverMessageReactions}\r\n        onMouseLeave={this.onLeaveMessageReactions}\r\n      >\r\n        {this.props.reactions.map(reaction => {\r\n          let reactedByYou = reaction.users.some(\r\n            u => u.id === this.props.userProfile.id\r\n          );\r\n          let userNames = reaction.users\r\n            .map(u =>\r\n              u.id === this.props.userProfile.id ? \"You\" : u.displayName\r\n            )\r\n            .join(\", \");\r\n          return (\r\n            <div key={reaction.id} className=\"message-reaction-container\">\r\n              <Popup\r\n                trigger={\r\n                  <div\r\n                    className={\r\n                      \"message-reaction\" +\r\n                      (reactedByYou ? \" message-reaction-reacted\" : \"\")\r\n                    }\r\n                    onClick={() => this.onReactionClicked(reaction)}\r\n                  >\r\n                    <div\r\n                      className=\"message-reaction-emoji\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: this.emojiService.convertColonsToHtml(\r\n                          reaction.emojiColons\r\n                        )\r\n                      }}\r\n                    />\r\n                    <div className=\"message-reaction-user-count\">\r\n                      {reaction.users.length}\r\n                    </div>\r\n                  </div>\r\n                }\r\n                content={`${userNames} reacted with ${reaction.emojiColons}`}\r\n                inverted\r\n                position=\"top center\"\r\n                size=\"tiny\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"message-reaction-container\">\r\n          <div className=\"message-reaction message-reaction-add-emoji\">\r\n            <EmojiPicker\r\n              onEmojiColonsAdded={this.onEmojiColonsSelected}\r\n              tooltipText=\"Add reaction\"\r\n              onClose={this.onEmojiClose}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessageItemUserReactions;\r\n","import React from \"react\";\r\nimport \"./ContentMessageItem.FileItemImage.css\";\r\nimport BlankModal from \"modals/BlankModal\";\r\nimport CloseButton from \"components/CloseButton\";\r\n\r\nclass ContentMessageItemFileItemImage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onImageFileClick = this.onImageFileClick.bind(this);\r\n    this.onImageFileFullScreenClose = this.onImageFileFullScreenClose.bind(\r\n      this\r\n    );\r\n\r\n    this.state = {\r\n      isFullScreenModalOpen: false\r\n    };\r\n  }\r\n\r\n  onImageFileClick() {\r\n    this.setState({ isFullScreenModalOpen: true });\r\n  }\r\n\r\n  onImageFileFullScreenClose() {\r\n    this.setState({ isFullScreenModalOpen: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"file-item-image-container\">\r\n        <img\r\n          className=\"file-item-image-file\"\r\n          src={this.props.imageUrl}\r\n          onLoad={this.props.onImageLoadingFinished}\r\n          onError={this.props.onImageLoadingFinished}\r\n          alt={this.props.imageName}\r\n          onClick={this.onImageFileClick}\r\n        />\r\n        {this.state.isFullScreenModalOpen && (\r\n          <BlankModal onClose={this.onImageFileFullScreenClose}>\r\n            <div className=\"full-screen-image-container\">\r\n              <img\r\n                className=\"full-screen-image\"\r\n                src={this.props.imageUrl}\r\n                alt={this.props.imageName}\r\n              />\r\n              <CloseButton onClose={this.onImageFileFullScreenClose} />\r\n            </div>\r\n          </BlankModal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessageItemFileItemImage;\r\n","import React from \"react\";\r\nimport \"./ContentMessageItem.UrlPreview.css\";\r\nimport ContentMessageItemFileItemImage from \"./ContentMessageItem.FileItemImage\";\r\n\r\nfunction ContentMessageItemUrlPreview(props) {\r\n  let fileItem = {\r\n    contentType: \"image\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-item-url-preview-container\">\r\n      {props.openGraphObjects.map((object, index) => (\r\n        <div key={index} className=\"url-preview-item\">\r\n          <div className=\"url-preview-item-site-name\">{object.siteName}</div>\r\n          <a\r\n            href={object.url}\r\n            target=\"_blank\"\r\n            className=\"url-preview-item-title\"\r\n          >\r\n            {object.title}\r\n          </a>\r\n          <div className=\"url-preview-item-description\">\r\n            {object.description}\r\n          </div>\r\n          <div className=\"url-preview-item-image\">\r\n            <ContentMessageItemFileItemImage\r\n              imageUrl={object.imageUrl}\r\n              imageName={object.title}\r\n              {...props}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentMessageItemUrlPreview;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Icon, Dropdown } from \"semantic-ui-react\";\r\nimport ApiService from \"services/ApiService\";\r\nimport \"./ShareFileForm.css\";\r\n\r\nclass ShareFileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShareFileFormSubmit = this.onShareFileFormSubmit.bind(this);\r\n    this.changeSelectedShareWith = this.changeSelectedShareWith.bind(this);\r\n    this.channelPrefix = \"channel_\";\r\n    this.conversationPrefix = \"conversation_\";\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      shareWithList: []\r\n    };\r\n\r\n    this.selectedShareWith = undefined;\r\n  }\r\n\r\n  componentDidMount() {\r\n    var channelsPromise = this.apiService.fetch(\"/api/channels/forUser\");\r\n    var conversationsPromise = this.apiService.fetch(\r\n      \"/api/conversations/recent\"\r\n    );\r\n\r\n    Promise.all([channelsPromise, conversationsPromise]).then(\r\n      ([channels, conversations]) => {\r\n        let shareWithList = [];\r\n        channels.forEach(c => {\r\n          if (!this.props.isChannel || this.props.id !== c.id) {\r\n            shareWithList.push({\r\n              key: `${this.channelPrefix}${c.id}`,\r\n              text: c.name,\r\n              value: `${this.channelPrefix}${c.id}`\r\n            });\r\n          }\r\n        });\r\n        conversations.forEach(c => {\r\n          if (this.props.isChannel || this.props.id !== c.id) {\r\n            shareWithList.push({\r\n              key: `${this.conversationPrefix}${c.id}`,\r\n              text: c.name,\r\n              value: `${this.conversationPrefix}${c.id}`\r\n            });\r\n          }\r\n        });\r\n        this.setState({ shareWithList: shareWithList });\r\n      }\r\n    );\r\n  }\r\n\r\n  onShareFileFormSubmit(event) {\r\n    event.preventDefault();\r\n    let shareWith = this.selectedShareWith;\r\n    if (!shareWith) return;\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    let targetName, value;\r\n    if (shareWith.key.startsWith(`${this.channelPrefix}`)) {\r\n      targetName = \"channel\";\r\n      value = +shareWith.value.substring(this.channelPrefix.length);\r\n    } else {\r\n      targetName = \"conversation\";\r\n      value = +shareWith.value.substring(this.conversationPrefix.length);\r\n    }\r\n\r\n    let url = `/api/messages/${targetName}/${value}/shareFile/${\r\n      this.props.file.id\r\n    }`;\r\n    this.apiService\r\n      .fetch(url, {\r\n        method: \"POST\"\r\n      })\r\n      .then(() => {\r\n        this.props.onClose();\r\n        this.props.history.push(`/${targetName}/${value}`);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Share file failed: ${error}`);\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  changeSelectedShareWith(event, item) {\r\n    let selectedValue = item.value;\r\n    let selectedItem = this.state.shareWithList.find(\r\n      item => item.value === selectedValue\r\n    );\r\n    this.selectedShareWith = selectedItem;\r\n  }\r\n\r\n  render() {\r\n    let file = this.props.file;\r\n    return (\r\n      <div className=\"form-container form-with-dropdown\">\r\n        <h1 style={{ textAlign: \"center\" }}>Share file</h1>\r\n        <form\r\n          id=\"shareFileForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onShareFileFormSubmit}\r\n        >\r\n          <p className=\"form-description\">Share with</p>\r\n          <Dropdown\r\n            placeholder=\"Search for channel or conversation\"\r\n            fluid\r\n            search\r\n            selection\r\n            options={this.state.shareWithList}\r\n            onChange={this.changeSelectedShareWith}\r\n          />\r\n          <div className=\"file-container\">\r\n            <div className=\"file-item\">\r\n              <Icon name=\"file outline\" size=\"large\" />\r\n              <span title={file.name}>{file.name}</span>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Share\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShareFileForm;\r\n","import React from \"react\";\r\nimport \"./ContentMessageItem.FileItemToolbar.css\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport ApiService from \"services/ApiService\";\r\nimport { toast } from \"react-toastify\";\r\nimport ShareFileForm from \"modalForms/ShareFileForm\";\r\nimport Modal from \"modals/Modal\";\r\n\r\nclass ContentMessageItemFileItemToolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShareFileClick = this.onShareFileClick.bind(this);\r\n    this.onCloseShareFile = this.onCloseShareFile.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      isShareFileModalOpen: false\r\n    };\r\n  }\r\n\r\n  onDownloadClick(id, name) {\r\n    this.apiService\r\n      .fetchFile(`/api/messages/downloadFile/${id}`, name)\r\n      .then(objectUrl => {\r\n        var link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", objectUrl);\r\n        link.setAttribute(\"download\", name);\r\n        link.style.display = \"none\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Download file failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onShareFileClick() {\r\n    this.setState({\r\n      isShareFileModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseShareFile() {\r\n    this.setState({\r\n      isShareFileModalOpen: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let file = this.props.file;\r\n    return (\r\n      <div className=\"file-item-toolbar\">\r\n        <Popup\r\n          trigger={\r\n            <div\r\n              className=\"file-item-toolbar-item\"\r\n              onClick={() => this.onDownloadClick(file.id, file.name)}\r\n            >\r\n              <Icon name=\"cloud download\" />\r\n            </div>\r\n          }\r\n          content=\"Download\"\r\n          inverted\r\n          position=\"top center\"\r\n          size=\"tiny\"\r\n        />\r\n        <Popup\r\n          trigger={\r\n            <div\r\n              className=\"file-item-toolbar-item\"\r\n              onClick={this.onShareFileClick}\r\n            >\r\n              <Icon name=\"share alternate\" />\r\n            </div>\r\n          }\r\n          content=\"Share\"\r\n          inverted\r\n          position=\"top center\"\r\n          size=\"tiny\"\r\n        />\r\n        <div>\r\n          {this.state.isShareFileModalOpen && (\r\n            <Modal onClose={this.onCloseShareFile}>\r\n              <ShareFileForm\r\n                file={file}\r\n                onClose={this.onCloseShareFile}\r\n                {...this.props}\r\n              />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessageItemFileItemToolbar;\r\n","import React from \"react\";\r\nimport \"./ContentMessageItem.FileItem.css\";\r\nimport ContentMessageItemFileItemToolbar from \"./ContentMessageItem.FileItemToolbar\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ApiService from \"services/ApiService\";\r\nimport { toast } from \"react-toastify\";\r\nimport BlankModal from \"modals/BlankModal\";\r\nimport CloseButton from \"components/CloseButton\";\r\nimport ContentMessageItemFileItemImage from \"./ContentMessageItem.FileItemImage\";\r\n\r\nclass ContentMessageItemFileItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShareFileClick = this.onShareFileClick.bind(this);\r\n    this.onCloseShareFile = this.onCloseShareFile.bind(this);\r\n    this.onImageFileClick = this.onImageFileClick.bind(this);\r\n    this.onImageFileFullScreenClose = this.onImageFileFullScreenClose.bind(\r\n      this\r\n    );\r\n    this.apiService = new ApiService(props);\r\n    this.isImage = props.file.contentType.startsWith(\"image\");\r\n\r\n    this.state = {\r\n      isShareFileModalOpen: false,\r\n      isFullScreenModalOpen: false\r\n    };\r\n  }\r\n\r\n  onDownloadClick(id, name) {\r\n    this.apiService\r\n      .fetchFile(`/api/messages/downloadFile/${id}`, name)\r\n      .then(objectUrl => {\r\n        var link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", objectUrl);\r\n        link.setAttribute(\"download\", name);\r\n        link.style.display = \"none\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Download file failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onShareFileClick() {\r\n    this.setState({\r\n      isShareFileModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseShareFile() {\r\n    this.setState({\r\n      isShareFileModalOpen: false\r\n    });\r\n  }\r\n\r\n  onImageFileClick() {\r\n    this.setState({ isFullScreenModalOpen: true });\r\n  }\r\n\r\n  onImageFileFullScreenClose() {\r\n    this.setState({ isFullScreenModalOpen: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.isImage) {\r\n      this.apiService\r\n        .fetchFile(\r\n          `/api/messages/downloadFile/${this.props.file.id}`,\r\n          this.props.file.name\r\n        )\r\n        .then(objectUrl => {\r\n          this.setState({ imageUrl: objectUrl });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let file = this.props.file;\r\n    return (\r\n      <div className=\"content-message-file-item\">\r\n        {this.isImage && this.state.imageUrl && (\r\n          <div className=\"file-image-item\">\r\n            <div className=\"file-image-item-name\">{file.name}</div>\r\n            <ContentMessageItemFileItemImage\r\n              imageUrl={this.state.imageUrl}\r\n              imageName={file.name}\r\n              {...this.props}\r\n            />\r\n            <div className=\"file-item-toolbar-container\">\r\n              <ContentMessageItemFileItemToolbar file={file} {...this.props} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!this.isImage && (\r\n          <div className=\"file-item\">\r\n            <Icon name=\"file outline\" size=\"large\" />\r\n            <span title={file.name}>{file.name}</span>\r\n            <div className=\"file-item-toolbar-container\">\r\n              <ContentMessageItemFileItemToolbar file={file} {...this.props} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessageItemFileItem;\r\n","import React from \"react\";\r\nimport { Icon, Popup, Confirm } from \"semantic-ui-react\";\r\nimport \"./ContentMessageItem.css\";\r\nimport ApiService from \"services/ApiService\";\r\nimport { toast } from \"react-toastify\";\r\nimport EmojiPicker from \"components/EmojiPicker\";\r\nimport ContentMessageItemUserReactions from \"./ContentMessageItem.UserReactions\";\r\nimport ContentMessageItemUrlPreview from \"./ContentMessageItem.UrlPreview\";\r\nimport ContentMessageItemFileItem from \"./ContentMessageItem.FileItem\";\r\n\r\nclass ContentMessageItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.onDeleteMessageConfirmed = this.onDeleteMessageConfirmed.bind(this);\r\n    this.onEmojiColonsAdded = this.onEmojiColonsAdded.bind(this);\r\n    this.onEmojiColonsRemoved = this.onEmojiColonsRemoved.bind(this);\r\n    this.onHoverMessageItem = this.onHoverMessageItem.bind(this);\r\n    this.onLeaveMessageItem = this.onLeaveMessageItem.bind(this);\r\n    this.removeCurrentMessageHover = this.removeCurrentMessageHover.bind(this);\r\n\r\n    this.state = {\r\n      isDeleteMessageConfirmOpen: false\r\n    };\r\n  }\r\n\r\n  onHoverMessageItem(event) {\r\n    this.removeCurrentMessageHover();\r\n    event.currentTarget.classList.add(\"message-hover\");\r\n  }\r\n\r\n  onLeaveMessageItem(event) {\r\n    event.currentTarget.classList.remove(\"message-hover\");\r\n  }\r\n\r\n  removeCurrentMessageHover() {\r\n    let currentMessage = document.querySelector(\".message-hover\");\r\n    currentMessage && currentMessage.classList.remove(\"message-hover\");\r\n  }\r\n\r\n  onDeleteMessageConfirmed(messageId) {\r\n    this.setState({\r\n      isDeleteMessageConfirmOpen: false\r\n    });\r\n\r\n    this.apiService\r\n      .fetch(\r\n        `/api/messages/${this.props.section}/${this.props.id}/deleteMessage`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(messageId)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        toast.error(`Delete message failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onEmojiColonsAdded(colons) {\r\n    this.apiService\r\n      .fetch(\r\n        `/api/messages/${this.props.section}/${this.props.id}/addReaction/${\r\n          this.props.message.id\r\n        }`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(colons)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        toast.error(`Add reaction failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onEmojiColonsRemoved(colons) {\r\n    this.apiService\r\n      .fetch(\r\n        `/api/messages/${this.props.section}/${this.props.id}/removeReaction/${\r\n          this.props.message.id\r\n        }`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(colons)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        toast.error(`Remove reaction failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let message = this.props.message;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          \"message-item-common-container message-item-container\" +\r\n          (message.isConsecutiveMessage ? \" following-message\" : \"\") +\r\n          (message.isSystemMessage ? \" system-message\" : \"\")\r\n        }\r\n        key={message.id}\r\n        onMouseOver={this.onHoverMessageItem}\r\n        onMouseLeave={this.onLeaveMessageItem}\r\n      >\r\n        <img\r\n          className=\"user-identicon\"\r\n          src={message.sender.identiconPath}\r\n          onClick={event =>\r\n            this.props.onOpenUserPopup(event.currentTarget, message.sender.id)\r\n          }\r\n        />\r\n        <div className=\"message-item\">\r\n          <div className=\"message-title\">\r\n            <b\r\n              className=\"message-sender-name\"\r\n              onClick={event =>\r\n                this.props.onOpenUserPopup(\r\n                  event.currentTarget,\r\n                  message.sender.id\r\n                )\r\n              }\r\n            >\r\n              {message.sender.displayName}\r\n            </b>\r\n            <span className=\"message-time\">{message.timeString}</span>\r\n          </div>\r\n          <div className=\"message-content-container\">\r\n            <div className=\"message-content-time\">\r\n              <span className=\"message-time\">{message.timeString}</span>\r\n            </div>\r\n            <div className=\"message-toolbar\">\r\n              <div className=\"message-toolbar-item\">\r\n                <div className=\"message-toolbar-item-content\">\r\n                  <EmojiPicker\r\n                    onEmojiColonsAdded={this.onEmojiColonsAdded}\r\n                    onClose={this.removeCurrentMessageHover}\r\n                    tooltipText=\"Add reaction\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {message.sender.id === this.props.userProfile.id &&\r\n                !message.hasFileAttachments &&\r\n                !message.isSystemMessage && (\r\n                  <div className=\"message-toolbar-item\">\r\n                    <Popup\r\n                      trigger={\r\n                        <div\r\n                          className=\"message-toolbar-item-content\"\r\n                          onClick={() =>\r\n                            this.props.onEditMessageClicked(message.id)\r\n                          }\r\n                        >\r\n                          <Icon name=\"edit outline\" />\r\n                        </div>\r\n                      }\r\n                      content=\"Edit message\"\r\n                      inverted\r\n                      position=\"top center\"\r\n                      size=\"tiny\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              {message.sender.id === this.props.userProfile.id &&\r\n                !message.isSystemMessage && (\r\n                  <div className=\"message-toolbar-item\">\r\n                    <Popup\r\n                      trigger={\r\n                        <div\r\n                          className=\"message-toolbar-item-content\"\r\n                          onClick={() =>\r\n                            this.setState({ isDeleteMessageConfirmOpen: true })\r\n                          }\r\n                        >\r\n                          <Icon name=\"trash alternate outline\" />\r\n                        </div>\r\n                      }\r\n                      content=\"Delete message\"\r\n                      inverted\r\n                      position=\"top center\"\r\n                      size=\"tiny\"\r\n                    />\r\n                    <Confirm\r\n                      open={this.state.isDeleteMessageConfirmOpen}\r\n                      header=\"Delete message\"\r\n                      content=\"Are you sure you want to delete this message? This cannot be undone.\"\r\n                      onCancel={() =>\r\n                        this.setState({\r\n                          isDeleteMessageConfirmOpen: false\r\n                        })\r\n                      }\r\n                      onConfirm={() =>\r\n                        this.onDeleteMessageConfirmed(message.id)\r\n                      }\r\n                    />\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"message-content\">\r\n              {!message.hasFileAttachments && (\r\n                <div>\r\n                  <RawMessage\r\n                    content={message.content}\r\n                    edited={message.contentEdited}\r\n                  />\r\n                  {message.containsOpenGraphObjects && (\r\n                    <ContentMessageItemUrlPreview\r\n                      openGraphObjects={message.openGraphDtos}\r\n                      {...this.props}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n              {message.hasFileAttachments && (\r\n                <div className=\"file-container\">\r\n                  {message.fileAttachments.map(file => (\r\n                    <ContentMessageItemFileItem\r\n                      key={file.id}\r\n                      file={file}\r\n                      {...this.props}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {message.messageReactions && message.messageReactions.length > 0 && (\r\n            <div className=\"message-reactions-container\">\r\n              <ContentMessageItemUserReactions\r\n                reactions={message.messageReactions}\r\n                onEmojiColonsAdded={this.onEmojiColonsAdded}\r\n                onEmojiColonsRemoved={this.onEmojiColonsRemoved}\r\n                {...this.props}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RawMessage(props) {\r\n  var content = props.content;\r\n  if (props.edited) {\r\n    var template = document.createElement(\"template\");\r\n    template.innerHTML = content;\r\n    var editedNode = document.createElement(\"span\");\r\n    var textNode = document.createTextNode(\"(edited)\");\r\n    editedNode.appendChild(textNode);\r\n    editedNode.setAttribute(\"class\", \"content-edited-text\");\r\n    template.content.lastChild.appendChild(editedNode);\r\n    content = template.innerHTML;\r\n  }\r\n  return (\r\n    <div\r\n      dangerouslySetInnerHTML={{\r\n        __html: content\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ContentMessageItem;\r\n","import Quill from \"quill\";\r\n\r\nclass QuillService {\r\n  constructor(params) {\r\n    this.params = params;\r\n    this.quill = undefined;\r\n    this.spanTagName = \"spanTag\";\r\n\r\n    this.keydownEventHandler = this.keydownEventHandler.bind(this);\r\n    this.submitMessage = this.submitMessage.bind(this);\r\n  }\r\n\r\n  getCursorIndex() {\r\n    return this.quill.selection.savedRange.index;\r\n  }\r\n\r\n  setCursorIndex(index) {\r\n    this.quill.setSelection(index, 0);\r\n  }\r\n\r\n  setContent(content) {\r\n    this.quill.root.innerHTML = content;\r\n  }\r\n\r\n  getSpanTagName() {\r\n    return this.spanTagName;\r\n  }\r\n\r\n  insertText(index, string) {\r\n    this.quill.insertText(index, string);\r\n  }\r\n\r\n  getText() {\r\n    return this.quill.getText().trim();\r\n  }\r\n\r\n  deleteText(index, length) {\r\n    this.quill.deleteText(index, length);\r\n  }\r\n\r\n  insertHtml(index, tagName, html) {\r\n    this.quill.insertEmbed(index, tagName, html);\r\n  }\r\n\r\n  unregisterEventHandlers() {\r\n    let editorContainer = document.querySelector(\r\n      this.params.editorContainerSelector\r\n    );\r\n    editorContainer.removeEventListener(\r\n      \"keydown\",\r\n      this.keydownEventHandler,\r\n      true\r\n    ); // true - event capturing phase\r\n    let editor = document.querySelector(\".ql-editor\");\r\n    editor.removeEventListener(\"focus\", this.params.onToggleFocus);\r\n    editor.removeEventListener(\"blur\", this.params.onToggleFocus);\r\n    this.quill.off(\"text-change\", this.params.onTextChange);\r\n  }\r\n\r\n  configQuill() {\r\n    var Clipboard = Quill.import(\"modules/clipboard\");\r\n    var Delta = Quill.import(\"delta\");\r\n    class PlainClipboard extends Clipboard {\r\n      convert(html = null) {\r\n        if (typeof html === \"string\") {\r\n          this.container.innerHTML = html;\r\n        }\r\n        let text = this.container.innerText;\r\n        this.container.innerHTML = \"\";\r\n        return new Delta().insert(text);\r\n      }\r\n    }\r\n    Quill.register(\"modules/clipboard\", PlainClipboard, true);\r\n\r\n    var Embed = Quill.import(\"blots/embed\");\r\n    class SpanTag extends Embed {\r\n      static create(value) {\r\n        let node = super.create(value);\r\n        node.innerHTML = `${value}`;\r\n        return node;\r\n      }\r\n    }\r\n    SpanTag.blotName = this.spanTagName;\r\n    SpanTag.tagName = \"span\";\r\n    SpanTag.className = \"span-tag\";\r\n\r\n    Quill.register({\r\n      [`formats/${this.spanTagName}`]: SpanTag\r\n    });\r\n  }\r\n\r\n  submitMessage() {\r\n    var text = this.quill.getText().trim();\r\n    var message = this.quill.root.innerHTML;\r\n    this.quill.root.innerHTML = \"\";\r\n    this.params.onSubmitMessage(message, text);\r\n  }\r\n\r\n  init() {\r\n    this.configQuill();\r\n\r\n    var bindings = {\r\n      list: {\r\n        key: \"enter\",\r\n        shiftKey: false,\r\n        handler: () => {\r\n          this.submitMessage();\r\n          return false;\r\n        }\r\n      }\r\n    };\r\n\r\n    this.quill = new Quill(this.params.editorContainerSelector, {\r\n      theme: \"snow\",\r\n      placeholder: `Type your message...`,\r\n      modules: {\r\n        keyboard: {\r\n          bindings: bindings\r\n        }\r\n      }\r\n    });\r\n\r\n    this.registerEventHandlers();\r\n  }\r\n\r\n  registerEventHandlers() {\r\n    this.quill.on(\"text-change\", this.params.onTextChange);\r\n\r\n    let editor = document.querySelector(\".ql-editor\");\r\n    editor.addEventListener(\"focus\", this.params.onToggleFocus);\r\n    editor.addEventListener(\"blur\", this.params.onToggleFocus);\r\n\r\n    var editorContainer = document.querySelector(\r\n      this.params.editorContainerSelector\r\n    );\r\n    editorContainer.addEventListener(\"keydown\", this.keydownEventHandler, true); // true - event capturing phase\r\n  }\r\n\r\n  toggleFormatChars(char) {\r\n    var selection = this.quill.getSelection();\r\n    var length = selection.length;\r\n    if (length < 1) return;\r\n\r\n    var start = selection.index;\r\n    var text = this.quill.getText(start, length);\r\n    var newText;\r\n    if (text.length > 2 && text.startsWith(char) && text.endsWith(char)) {\r\n      // remove char\r\n      newText = text.substr(1, length - 2);\r\n      this.quill.deleteText(start, length);\r\n      this.quill.insertText(start, newText);\r\n      this.quill.setSelection(start, length - 2);\r\n    } else {\r\n      // add char\r\n      newText = char + text + char;\r\n      this.quill.deleteText(start, length);\r\n      this.quill.insertText(start, newText);\r\n      this.quill.setSelection(start, length + 2);\r\n    }\r\n  }\r\n\r\n  keydownEventHandler(event) {\r\n    var handled = false;\r\n    var char = \"\";\r\n    if (event.ctrlKey || event.metaKey) {\r\n      switch (event.keyCode) {\r\n        case 66: // ctrl+B or ctrl+b\r\n        case 98:\r\n          handled = true;\r\n          char = \"*\";\r\n          break;\r\n        case 73: // ctrl+I or ctrl+i\r\n        case 105:\r\n          handled = true;\r\n          char = \"_\";\r\n          break;\r\n        case 85: // ctrl+U or ctrl+u\r\n        case 117:\r\n          handled = true;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (!!char) {\r\n      this.toggleFormatChars(char);\r\n    }\r\n\r\n    if (handled === true) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default QuillService;\r\n","import React from \"react\";\r\nimport \"./ContentEditor.UserMention.css\";\r\n\r\nclass ContentEditorUserMention extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onMentionSelecting = this.onMentionSelecting.bind(this);\r\n  }\r\n\r\n  onMentionSelecting(id) {\r\n    let activeItem = document.querySelector(\".user-mention-item.active-item\");\r\n    activeItem && activeItem.classList.remove(\"active-item\");\r\n    this.props.onMentionSelecting(id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user-mention panel\">\r\n        <div className=\"user-mention-title\">\r\n          <div className=\"mention-filter-name\">\r\n            People matching \"@<b>{this.props.filterName}</b>\"\r\n          </div>\r\n          <div className=\"mention-prompt\">\r\n            <span>\r\n              <b>&uarr;</b> <b>&darr;</b> to navigate\r\n            </span>\r\n            <span>\r\n              <b>&crarr;</b> to select\r\n            </span>\r\n            <span>\r\n              <b>esc</b> to dismiss\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {this.props.userList.map((u, index) => {\r\n          let highlighting = index === this.props.highlightItemIndex;\r\n          return (\r\n            <div\r\n              key={u.id}\r\n              className={\r\n                \"user-mention-item list-item\" +\r\n                (highlighting ? \" active-item\" : \"\")\r\n              }\r\n              onMouseOver={() => {\r\n                this.onMentionSelecting(u.id);\r\n              }}\r\n              onClick={event => {\r\n                event.preventDefault();\r\n                this.props.onMentionSelected(u.id);\r\n              }}\r\n            >\r\n              <img className=\"user-identicon\" src={u.identiconPath} />\r\n              <span className=\"user-mention-name\">{u.displayName}</span>\r\n              <span className=\"user-mention-email\">{u.email}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentEditorUserMention;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Icon, Progress } from \"semantic-ui-react\";\r\nimport \"./UploadFileForm.css\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass UploadFileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onUploadFileFormSubmit = this.onUploadFileFormSubmit.bind(this);\r\n    this.apiService = new ApiService(props);\r\n    let maxFileCount = 3;\r\n    this.files = this.props.files;\r\n    if (this.files.length > maxFileCount) {\r\n      toast.warn(`Maximum ${maxFileCount} files can be uploaded at one time`);\r\n      this.files = this.files.slice(0, maxFileCount);\r\n    }\r\n\r\n    this.state = {\r\n      showUploadingBar: false\r\n    };\r\n  }\r\n\r\n  onUploadFileFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.files.length === 0) return;\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    this.setState({\r\n      showUploadingBar: true\r\n    });\r\n\r\n    let formData = new FormData();\r\n    this.files.forEach(file => formData.append(\"files\", file));\r\n\r\n    let url = this.props.isChannel\r\n      ? `/api/messages/channel/${this.props.id}/uploadFile`\r\n      : `/api/messages/conversation/${this.props.id}/uploadFile`;\r\n    this.apiService\r\n      .fetch(\r\n        url,\r\n        {\r\n          method: \"POST\",\r\n          body: formData\r\n        },\r\n        true //noContentType\r\n      )\r\n      .then(id => {\r\n        this.props.onUploaded();\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Upload file failed: ${error}`);\r\n        this.setState({\r\n          showUploadingBar: false\r\n        });\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h1 style={{ textAlign: \"center\" }}>Upload file</h1>\r\n        <form\r\n          id=\"uploadFileForm\"\r\n          method=\"post\"\r\n          onSubmit={this.onUploadFileFormSubmit}\r\n        >\r\n          <p className=\"form-description warning-text\">\r\n            There are some limitations on how many files you can upload. If you\r\n            need to upload more files, please contact liefuzhangnz@gmail.com\r\n          </p>\r\n          <div className=\"file-container\">\r\n            {this.files.map(file => (\r\n              <div key={file.name + file.lastModified} className=\"file-item\">\r\n                <Icon name=\"file outline\" size=\"large\" />\r\n                <span title={file.name}>{file.name}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button type=\"submit\" className=\"btn form-control\">\r\n            Upload\r\n          </button>\r\n          {this.state.showUploadingBar && (\r\n            <Progress percent={100} active>\r\n              Uploading file\r\n            </Progress>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadFileForm;\r\n","import React from \"react\";\r\nimport \"./ContentEditor.css\";\r\nimport QuillService from \"services/QuillService\";\r\nimport ContentEditorUserMention from \"./ContentEditor.UserMention\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport UploadFileForm from \"modalForms/UploadFileForm\";\r\nimport Modal from \"modals/Modal\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\nimport EmojiPicker from \"components/EmojiPicker\";\r\n\r\nclass ContentEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.isSendingTypingMessage = false;\r\n    this.keydownEventHandler = this.keydownEventHandler.bind(this);\r\n    this.onTextChange = this.onTextChange.bind(this);\r\n    this.onMentionSelecting = this.onMentionSelecting.bind(this);\r\n    this.onMentionSelected = this.onMentionSelected.bind(this);\r\n    this.onSubmitMessage = this.onSubmitMessage.bind(this);\r\n    this.onToggleFocus = this.onToggleFocus.bind(this);\r\n    this.onFileUploaded = this.onFileUploaded.bind(this);\r\n    this.onCloseUploadFile = this.onCloseUploadFile.bind(this);\r\n    this.onUploadFileButtonClicked = this.onUploadFileButtonClicked.bind(this);\r\n    this.onMentionButtonClicked = this.onMentionButtonClicked.bind(this);\r\n    this.openMention = this.openMention.bind(this);\r\n    this.closeMention = this.closeMention.bind(this);\r\n    this.onEmojiHtmlAdded = this.onEmojiHtmlAdded.bind(this);\r\n    this.onEditorPaste = this.onEditorPaste.bind(this);\r\n    this.userList = [];\r\n\r\n    this.quillService = new QuillService({\r\n      editorContainerSelector: `#${this.props.containerId} #messageEditor`,\r\n      onSubmitMessage: this.onSubmitMessage,\r\n      onTextChange: this.onTextChange,\r\n      onToggleFocus: this.onToggleFocus\r\n    });\r\n\r\n    this.state = {\r\n      isMentionOpen: false,\r\n      mentionUserList: [],\r\n      highlightMentionUserIndex: 0,\r\n      isUploadFileModalOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.containerElement = document.getElementById(this.props.containerId);\r\n\r\n    this.quillService.init();\r\n    this.initMention();\r\n    this.registerEventHandlers();\r\n    this.fecthUsers();\r\n    if (this.props.isEditing) this.populateCurrentContent();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unregisterEventHandlers();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.submitMessage !== prevProps.submitMessage &&\r\n      this.props.submitMessage === true\r\n    ) {\r\n      this.quillService.submitMessage();\r\n    }\r\n  }\r\n\r\n  populateCurrentContent() {\r\n    let formatTagRegex = /<b>|<i>|<strike>|<code>|<pre>|<blockquote>|<\\/a>/;\r\n    let content = this.props.message.content;\r\n\r\n    if (formatTagRegex.test(content)) {\r\n      this.apiService\r\n        .fetch(\"/api/messages/stringifyHtml\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(content)\r\n        })\r\n        .then(stringifiedHtml => {\r\n          this.quillService.setContent(stringifiedHtml);\r\n        });\r\n    } else this.quillService.setContent(content);\r\n  }\r\n\r\n  fecthUsers() {\r\n    this.apiService.fetch(\"/api/users\").then(users => {\r\n      let currentUserId = this.props.userProfile.id;\r\n      this.userList = users.filter(u => u.id !== currentUserId);\r\n    });\r\n  }\r\n\r\n  initMention() {\r\n    this.mention = {\r\n      mentionAtIndex: undefined,\r\n      filterName: \"\",\r\n      isSelecting: false,\r\n      isSelectionInserted: false,\r\n      isSelected: false, // true after clicked or enter pressed\r\n      mentionRegex: /<span data-user-id=\"([0-9]+)\" class=\"mentioned-user\">@.+?<\\/span>/g\r\n    };\r\n  }\r\n\r\n  openMention() {\r\n    this.setState(\r\n      {\r\n        isMentionOpen: true\r\n      },\r\n      () => {\r\n        document.addEventListener(\"click\", this.closeMention);\r\n      }\r\n    );\r\n  }\r\n\r\n  closeMention(event) {\r\n    let mentionContainer = this.containerElement.querySelector(\r\n      \".user-mention-container\"\r\n    );\r\n    if (event && mentionContainer.contains(event.target)) return;\r\n    this.initMention();\r\n    this.setState({ isMentionOpen: false }, () => {\r\n      document.removeEventListener(\"click\", this.closeMention);\r\n    });\r\n  }\r\n\r\n  onSubmitMessage(message, pureText) {\r\n    let emojiRegex = /<span class=\"emoji-container\">/;\r\n    if (\r\n      !pureText &&\r\n      !this.mention.mentionRegex.test(message) &&\r\n      !emojiRegex.test(message)\r\n    )\r\n      return;\r\n\r\n    var mentionUserIds = [];\r\n    var groups;\r\n    this.mention.mentionRegex.lastIndex = 0;\r\n    while ((groups = this.mention.mentionRegex.exec(message)) !== null) {\r\n      mentionUserIds.push(+groups[1]);\r\n    }\r\n    \r\n    this.closeMention();\r\n    this.isSendingTypingMessage = false;\r\n\r\n    let url = this.props.isEditing\r\n      ? `/api/messages/${this.props.section}/${this.props.id}/update/${\r\n          this.props.message.id\r\n        }`\r\n      : `/api/messages/${this.props.section}/${this.props.id}`;\r\n    this.apiService\r\n      .fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          messageContent: message,\r\n          mentionUserIds: mentionUserIds\r\n        })\r\n      })\r\n      .then(() => {\r\n        if (this.props.onMessageSubmitted) this.props.onMessageSubmitted();\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Send message failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  onTextChange(event) {\r\n    if (!this.mention.isSelecting) {\r\n      let insertOp = event.ops.find(o => !!o.insert);\r\n      let deleteOp = event.ops.find(o => !!o.delete);\r\n      if (\r\n        insertOp &&\r\n        insertOp.insert &&\r\n        typeof insertOp.insert === \"string\" &&\r\n        insertOp.insert.trim() === \"@\" &&\r\n        !this.state.isMentionOpen\r\n      ) {\r\n        this.setMentionList(this.userList.slice(0, 8));\r\n        this.openMention();\r\n        this.mention.mentionAtIndex = this.quillService.getCursorIndex() - 1;\r\n        return;\r\n      } else if (\r\n        deleteOp &&\r\n        this.state.isMentionOpen &&\r\n        !this.mention.filterName\r\n      ) {\r\n        this.onMentionFinish();\r\n        return;\r\n      }\r\n\r\n      if (this.state.isMentionOpen) {\r\n        if (this.mention.isSelectionInserted) {\r\n          // type after mention selection inserted\r\n          this.onMentionFinish();\r\n        } else {\r\n          insertOp\r\n            ? (this.mention.filterName += insertOp.insert)\r\n            : (this.mention.filterName = this.mention.filterName.substring(\r\n                0,\r\n                this.mention.filterName.length - deleteOp.delete\r\n              ));\r\n          let mentionList = this.userList\r\n            .filter(\r\n              u =>\r\n                u.displayName\r\n                  .toLowerCase()\r\n                  .indexOf(this.mention.filterName.toLowerCase()) > -1\r\n            )\r\n            .slice(0, 8);\r\n          this.setMentionList(mentionList);\r\n\r\n          if (\r\n            mentionList.length === 0 &&\r\n            insertOp &&\r\n            insertOp.insert.trim() === \"\"\r\n          )\r\n            this.onMentionFinish();\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.isSendingTypingMessage === false &&\r\n      !this.props.isEditing &&\r\n      this.quillService.getText()\r\n    ) {\r\n      this.isSendingTypingMessage = true;\r\n      this.sendTypingMessage();\r\n      setTimeout(() => {\r\n        this.isSendingTypingMessage = false;\r\n      }, 10000); // throttle it to once in 10 secs\r\n    }\r\n  }\r\n\r\n  setMentionList(list) {\r\n    this.setState({\r\n      mentionUserList: list,\r\n      highlightMentionUserIndex: 0\r\n    });\r\n  }\r\n\r\n  sendTypingMessage() {\r\n    var url = this.props.isChannel\r\n      ? `/api/channels/notifyTyping`\r\n      : `/api/conversations/notifyTyping`;\r\n    this.apiService.fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.props.id)\r\n    });\r\n  }\r\n\r\n  formatMentionUser(user) {\r\n    // TODO escape displayName, using html-entities\r\n    return `<span data-user-id=\"${user.id}\" class=\"mentioned-user\">@${\r\n      user.displayName\r\n    }</span>`;\r\n  }\r\n\r\n  onMentionSelecting(id) {\r\n    if (\r\n      this.state.isMentionOpen &&\r\n      !!this.mention.filterName &&\r\n      !this.mention.isSelected\r\n    )\r\n      return;\r\n    this.mention.isSelecting = true;\r\n    let user = this.userList.find(u => u.id === id);\r\n    this.quillService.deleteText(this.mention.mentionAtIndex, 1); // delete the previous @ or @userName\r\n    this.quillService.insertHtml(\r\n      this.mention.mentionAtIndex,\r\n      this.quillService.getSpanTagName(),\r\n      this.formatMentionUser(user)\r\n    );\r\n    this.quillService.insertText(this.mention.mentionAtIndex + 1, \" \"); // so that the cursor becomes visible\r\n    this.quillService.setCursorIndex(this.mention.mentionAtIndex + 2, 0);\r\n    this.mention.isSelecting = false;\r\n    this.mention.isSelectionInserted = true;\r\n  }\r\n\r\n  onMentionSelected(id) {\r\n    this.mention.isSelected = true;\r\n    this.onMentionSelecting(id);\r\n    if (this.mention.filterName)\r\n      this.quillService.deleteText(\r\n        this.mention.mentionAtIndex + 2,\r\n        this.mention.filterName.length\r\n      );\r\n    this.onMentionFinish();\r\n  }\r\n\r\n  focusOnEditor() {\r\n    let editor = this.containerElement.querySelector(\".ql-editor\");\r\n    editor.focus();\r\n  }\r\n\r\n  onMentionFinish() {\r\n    this.closeMention();\r\n    this.focusOnEditor();\r\n  }\r\n\r\n  onMentionButtonClicked(event) {\r\n    this.focusOnEditor();\r\n    let index = this.quillService.getCursorIndex();\r\n    this.quillService.setCursorIndex(index, 0);\r\n    this.quillService.insertText(index, \"@\");\r\n  }\r\n\r\n  registerEventHandlers() {\r\n    var editorContainer = this.containerElement.querySelector(\"#messageEditor\");\r\n    editorContainer.addEventListener(\"keydown\", this.keydownEventHandler, true); // true - event capturing phase\r\n  }\r\n\r\n  unregisterEventHandlers() {\r\n    let editorContainer = this.containerElement.querySelector(\"#messageEditor\");\r\n    editorContainer.removeEventListener(\r\n      \"keydown\",\r\n      this.keydownEventHandler,\r\n      true\r\n    ); // true - event capturing phase\r\n\r\n    this.quillService.unregisterEventHandlers();\r\n  }\r\n\r\n  onToggleFocus() {\r\n    let messageBox = this.containerElement.querySelector(\".message-box\");\r\n    messageBox.classList.toggle(\"focus\");\r\n  }\r\n\r\n  keydownEventHandler(event) {\r\n    var handled = false;\r\n\r\n    if (\r\n      this.state.isMentionOpen &&\r\n      !event.ctrlKey &&\r\n      !event.shiftKey &&\r\n      !event.altKey\r\n    ) {\r\n      let index = this.state.highlightMentionUserIndex;\r\n      switch (event.keyCode) {\r\n        case 40: // arrow down\r\n          this.setState({\r\n            highlightMentionUserIndex:\r\n              index + 1 > this.state.mentionUserList.length - 1 ? 0 : index + 1\r\n          });\r\n          handled = true;\r\n          break;\r\n        case 38: // arrow up\r\n          this.setState({\r\n            highlightMentionUserIndex:\r\n              index - 1 < 0 ? this.state.mentionUserList.length - 1 : index - 1\r\n          });\r\n          handled = true;\r\n          break;\r\n        case 13: // enter\r\n        case 9: // tab\r\n          let user = this.state.mentionUserList[\r\n            this.state.highlightMentionUserIndex\r\n          ];\r\n          if (!!user) {\r\n            this.onMentionSelected(user.id);\r\n            handled = true;\r\n          }\r\n          break;\r\n        case 27: // esc\r\n          this.onMentionFinish();\r\n          handled = true;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (handled === true) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  onEditorPaste(event) {\r\n    var imageRegex = /^image\\/(gif|jpg|jpeg|tiff|png)$/i;\r\n    var items = event.clipboardData.items;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (imageRegex.test(items[i].type)) {\r\n        let file = items[i].getAsFile();\r\n        if (file) {\r\n          this.openUploadFile([file]);\r\n          event.stopPropagation();\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onFileUploaded(event) {\r\n    if (event.currentTarget.files && event.currentTarget.files[0]) {\r\n      this.openUploadFile(event.currentTarget.files);\r\n    }\r\n  }\r\n\r\n  openUploadFile(files) {\r\n    this.uploadFiles = files;\r\n    this.setState({\r\n      isUploadFileModalOpen: true\r\n    });\r\n  }\r\n\r\n  onCloseUploadFile() {\r\n    this.containerElement.querySelector(\"#uploadFile\").value = \"\";\r\n    this.setState({\r\n      isUploadFileModalOpen: false\r\n    });\r\n  }\r\n\r\n  onUploadFileButtonClicked() {\r\n    this.containerElement.querySelector(\"#uploadFile\").click();\r\n  }\r\n\r\n  onEmojiHtmlAdded(html) {\r\n    const index = this.quillService.getCursorIndex();\r\n    this.quillService.insertHtml(\r\n      index,\r\n      this.quillService.getSpanTagName(),\r\n      `<span class=\"emoji-container\">${html}</span>`\r\n    );\r\n    this.quillService.insertText(index + 1, \" \"); // so that the cursor becomes visible\r\n    this.quillService.setCursorIndex(index + 2, 0);\r\n    this.focusOnEditor();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.isEditing ? \"editing-editor\" : \"\"}>\r\n        <form id=\"messageForm\" method=\"post\">\r\n          {this.state.isMentionOpen && (\r\n            <div className=\"user-mention-container\">\r\n              <ContentEditorUserMention\r\n                userList={this.state.mentionUserList}\r\n                onMentionSelecting={this.onMentionSelecting}\r\n                onMentionSelected={this.onMentionSelected}\r\n                highlightItemIndex={this.state.highlightMentionUserIndex}\r\n                filterName={this.mention.filterName}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"message-box\">\r\n            <div className=\"message-editor-container\">\r\n              <div id=\"messageEditor\" onPaste={this.onEditorPaste} />\r\n            </div>\r\n            <div className=\"message-box-buttons\">\r\n              <div className=\"message-box-button\">\r\n                <div onClick={this.onMentionButtonClicked}>\r\n                  <Popup\r\n                    trigger={<Icon name=\"at\" className=\"icon-mention\" />}\r\n                    content=\"Mention user\"\r\n                    inverted\r\n                    position=\"top center\"\r\n                    size=\"tiny\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"message-box-button\">\r\n                <input\r\n                  id=\"uploadFile\"\r\n                  type=\"file\"\r\n                  multiple\r\n                  onChange={this.onFileUploaded}\r\n                />\r\n                <div onClick={this.onUploadFileButtonClicked}>\r\n                  <Popup\r\n                    trigger={\r\n                      <Icon name=\"paperclip\" className=\"icon-paperclip\" />\r\n                    }\r\n                    content=\"Send file\"\r\n                    inverted\r\n                    position=\"top center\"\r\n                    size=\"tiny\"\r\n                  />\r\n                </div>\r\n                {this.state.isUploadFileModalOpen && (\r\n                  <Modal onClose={this.onCloseUploadFile}>\r\n                    <UploadFileForm\r\n                      files={Array.from(this.uploadFiles)}\r\n                      onUploaded={this.onCloseUploadFile}\r\n                      {...this.props}\r\n                    />\r\n                  </Modal>\r\n                )}\r\n              </div>\r\n              <div className=\"message-box-button\">\r\n                <EmojiPicker\r\n                  onEmojiHtmlAdded={this.onEmojiHtmlAdded}\r\n                  tooltipText=\"Add emoji\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentEditor;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport \"./ContentMessageItemEditor.css\";\r\nimport ContentEditor from \"./ContentEditor\";\r\nimport ApiService from \"services/ApiService\";\r\n\r\nclass ContentMessageItemEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = { saveChangesClicked: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"message-item-common-container message-item-edit-container\">\r\n        <img\r\n          className=\"user-identicon\"\r\n          src={this.props.userProfile.identiconPath}\r\n        />\r\n        <div className=\"message-item-editor-container\">\r\n          <div id=\"messageItemEditor\">\r\n            <ContentEditor\r\n              containerId=\"messageItemEditor\"\r\n              isEditing={true}\r\n              onMessageSubmitted={this.props.onClose}\r\n              submitMessage={this.state.saveChangesClicked}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n          <div className=\"message-item-editor-buttons\">\r\n            <button\r\n              className={\r\n                \"btn white-btn \" +\r\n                (this.state.saveChangesClicked ? \"disabled-button\" : \"\")\r\n              }\r\n              onClick={this.props.onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className={\r\n                \"btn \" +\r\n                (this.state.saveChangesClicked ? \"disabled-button\" : \"\")\r\n              }\r\n              onClick={() => this.setState({ saveChangesClicked: true })}\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessageItemEditor;\r\n","import React from \"react\";\r\nimport \"./ContentMessages.Description.css\";\r\n\r\nclass ContentMessagesChannelDescription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.dto = props.messageChannelDescriptionDto;\r\n    this.createdBy =\r\n      this.dto.createdByUser.id === props.userProfile.id\r\n        ? \"you\"\r\n        : this.dto.createdByUser.displayName;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content-message-description\">\r\n        <div className=\"message-description-name\">\r\n          {this.dto.messageChannelName}\r\n        </div>\r\n        <p>\r\n          <span>\r\n            This channel has been created by {this.createdBy} on{\" \"}\r\n            {this.dto.createdDateString}. This is the very beginning of the{\" \"}\r\n            <b>{this.dto.messageChannelName}</b> channel.\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessagesChannelDescription;\r\n","import React from \"react\";\r\nimport \"./ContentMessages.Description.css\";\r\n\r\nclass ContentMessagesConversationDescription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let userList = this.props.isSelfConversation\r\n      ? this.props.userList\r\n      : this.props.userList.filter(\r\n          user => user.id !== this.props.userProfile.id\r\n        );\r\n    return (\r\n      <div className=\"content-message-description\">\r\n        <div className=\"user-identicons\">\r\n          {userList.map(u => (\r\n            <img\r\n              key={u.id}\r\n              data-user-id={u.id}\r\n              className=\"user-identicon mentioned-user\"\r\n              src={u.identiconPath}\r\n            />\r\n          ))}\r\n        </div>\r\n        <p>\r\n          {this.props.isSelfConversation && (\r\n            <span>\r\n              <b>This is your own space!</b> Feel free to play around, draft or\r\n              simply keep things handy.\r\n            </span>\r\n          )}\r\n          {!this.props.isSelfConversation && (\r\n            <span>\r\n              This is the very beginnning of the direct message history between\r\n              you and{\" \"}\r\n              {this.props.userList\r\n                .filter(user => user.id !== this.props.userProfile.id)\r\n                .map((user, index) => (\r\n                  <span key={user.id}>\r\n                    {index !== 0 ? \", \" : \"\"}\r\n                    <span data-user-id={user.id} className=\"mentioned-user\">\r\n                      @{user.displayName}\r\n                    </span>\r\n                  </span>\r\n                ))}\r\n              . Let's chat!\r\n            </span>\r\n          )}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessagesConversationDescription;\r\n","import moment from \"moment\";\r\n\r\nclass MessageChangeService {\r\n  constructor() {\r\n    this.CHANGE_TYPE = {\r\n      ADDED: 1,\r\n      EDITED: 2,\r\n      DELETED: 3\r\n    };\r\n  }\r\n\r\n  setIsConsecutiveMessage(newerMessage, olderMessage) {\r\n    if (\r\n      newerMessage.senderId !== olderMessage.senderId ||\r\n      olderMessage.isSystemMessage\r\n    ) {\r\n      newerMessage.isConsecutiveMessage = false;\r\n      return;\r\n    }\r\n\r\n    let newerMessageDate = moment(newerMessage.timeString, \"h:mm A\");\r\n    let olderMessageDate = moment(olderMessage.timeString, \"h:mm A\");\r\n    newerMessage.isConsecutiveMessage =\r\n      newerMessageDate - olderMessageDate <= 3 * 60 * 1000;\r\n  }\r\n\r\n  mergeMessageGroups(olderMessageGroups, newerMessageGroups) {\r\n    let mergedMessageGroups = [];\r\n    if (\r\n      newerMessageGroups.length > 0 &&\r\n      olderMessageGroups.length > 0 &&\r\n      olderMessageGroups[olderMessageGroups.length - 1].dateString ===\r\n        newerMessageGroups[0].dateString\r\n    ) {\r\n      // when message group has overlapping date\r\n      let firstNewerMessageGroupMessages = newerMessageGroups[0].messages;\r\n      let lastOlderMessageGroupMessages =\r\n        olderMessageGroups[olderMessageGroups.length - 1].messages;\r\n      this.setIsConsecutiveMessage(\r\n        firstNewerMessageGroupMessages[0],\r\n        lastOlderMessageGroupMessages[lastOlderMessageGroupMessages.length - 1]\r\n      );\r\n      newerMessageGroups[0].messages = lastOlderMessageGroupMessages.concat(\r\n        firstNewerMessageGroupMessages\r\n      );\r\n      mergedMessageGroups = olderMessageGroups\r\n        .slice(0, olderMessageGroups.length - 1)\r\n        .concat(newerMessageGroups);\r\n    } else {\r\n      mergedMessageGroups = olderMessageGroups.concat(newerMessageGroups);\r\n    }\r\n\r\n    return mergedMessageGroups;\r\n  }\r\n\r\n  handleEditedMessageItem(messageGroupDto, currentMessageGroups) {\r\n    let editedMessage = messageGroupDto.messages[0];\r\n    let currentGroup = currentMessageGroups.find(\r\n      g => g.dateString === messageGroupDto.dateString\r\n    );\r\n    if (!currentGroup) return;\r\n    let currentMessageIndex = currentGroup.messages.findIndex(\r\n      m => m.id === editedMessage.id\r\n    );\r\n    if (currentMessageIndex < 0) return;\r\n    editedMessage.isConsecutiveMessage =\r\n      currentGroup.messages[currentMessageIndex].isConsecutiveMessage;\r\n    currentGroup.messages[currentMessageIndex] = editedMessage;\r\n\r\n    return currentMessageGroups;\r\n  }\r\n\r\n  handleDeletedMessageItem(messageId, currentMessageGroups) {\r\n    for (let group of currentMessageGroups) {\r\n      let currentMessageIndex = group.messages.findIndex(\r\n        m => m.id === messageId\r\n      );\r\n      if (currentMessageIndex < 0) continue;\r\n      if (\r\n        currentMessageIndex > 0 &&\r\n        currentMessageIndex < group.messages.length - 1\r\n      ) {\r\n        this.setIsConsecutiveMessage(\r\n          group.messages[currentMessageIndex + 1],\r\n          group.messages[currentMessageIndex - 1]\r\n        );\r\n      } else if (\r\n        currentMessageIndex === 0 &&\r\n        currentMessageIndex < group.messages.length - 1\r\n      ) {\r\n        group.messages[currentMessageIndex + 1].isConsecutiveMessage = false;\r\n      }\r\n      group.messages.splice(currentMessageIndex, 1);\r\n      if (group.messages.length === 0) {\r\n        let currentGroupIndex = currentMessageGroups.indexOf(group);\r\n        currentMessageGroups.splice(currentGroupIndex, 1);\r\n      }\r\n      return currentMessageGroups;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageChangeService;\r\n","class MessageScrollService {\r\n  constructor(params) {\r\n    this.params = params;\r\n    this.lastGroupIndex = -1;\r\n    this.offsetTops = [];\r\n    this.messageGroupAnchors = [];\r\n    this.scrolled = false;\r\n\r\n    this.onScrollHandler = this.onScrollHandler.bind(this);\r\n    this.calculateMessageGroupOffsetTops = this.calculateMessageGroupOffsetTops.bind(\r\n      this\r\n    );\r\n    this.calculateCurrentGroup = this.calculateCurrentGroup.bind(this);\r\n  }\r\n\r\n  reset() {\r\n    this.scrollableElement = document.querySelector(\r\n      this.params.scrollableElementSelector\r\n    );\r\n    this.scrollableElement.onscroll = this.onScrollHandler;\r\n    this.lastGroupIndex = -1;\r\n    this.calculateMessageGroupOffsetTops();\r\n    this.calculateCurrentGroup();\r\n  }\r\n\r\n  onScrollHandler() {\r\n    if (this.scrollableElement.scrollTop === 0) {\r\n      this.savedScrollHeight = this.scrollableElement.scrollHeight;\r\n      this.params.onScrollToTop();\r\n    }\r\n    this.calculateCurrentGroup();\r\n  }\r\n\r\n  resumeScrollPosition() {\r\n    if (this.savedScrollHeight) {\r\n      this.scrollableElement.scrollTop =\r\n        this.scrollableElement.scrollHeight - this.savedScrollHeight;\r\n      this.savedScrollHeight = undefined;\r\n    }\r\n  }\r\n\r\n  calculateMessageGroupOffsetTops() {\r\n    this.messageGroupAnchors = Array.from(\r\n      this.scrollableElement.querySelectorAll(this.params.anchorSelector)\r\n    );\r\n    this.offsetTops = this.messageGroupAnchors.map(function(a) {\r\n      return a.offsetTop;\r\n    });\r\n  }\r\n\r\n  calculateCurrentGroup() {\r\n    if (this.messageGroupAnchors.length === 0) return;\r\n    var adjustHeight = this.messageGroupAnchors[0].offsetHeight / 2;\r\n    var currentGroupIndex = -1;\r\n    var startIndex = this.lastGroupIndex - 1;\r\n    startIndex = startIndex < 0 ? 0 : startIndex;\r\n    for (var i = startIndex; i < this.offsetTops.length; i++) {\r\n      if (\r\n        this.scrollableElement.scrollTop <\r\n        this.offsetTops[i] + adjustHeight\r\n      ) {\r\n        break;\r\n      }\r\n      currentGroupIndex = i;\r\n    }\r\n    if (this.lastGroupIndex !== currentGroupIndex) {\r\n      let currentAnchor = this.scrollableElement.querySelector(\r\n        `.${this.params.stickyItemClassName}`\r\n      );\r\n      currentAnchor &&\r\n        currentAnchor.classList.remove(this.params.stickyItemClassName);\r\n      if (currentGroupIndex !== -1) {\r\n        this.messageGroupAnchors[currentGroupIndex].classList.add(\r\n          this.params.stickyItemClassName\r\n        );\r\n      }\r\n      this.lastGroupIndex = currentGroupIndex;\r\n    }\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.scrollableElement ||\r\n      (this.scrollableElement = document.querySelector(\r\n        this.params.scrollableElementSelector\r\n      ));\r\n    this.scrollableElement.scrollTop = this.scrollableElement.scrollHeight;\r\n  }\r\n\r\n  isCloseToBottom() {\r\n    this.scrollableElement ||\r\n      (this.scrollableElement = document.querySelector(\r\n        this.params.scrollableElementSelector\r\n      ));\r\n    let buffer = 80;\r\n    return (\r\n      this.scrollableElement.scrollTop + window.innerHeight >\r\n      this.scrollableElement.scrollHeight + buffer\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageScrollService;\r\n","import React from \"react\";\r\nimport \"./ContentMessages.css\";\r\nimport \"lib/simplebar.css\";\r\nimport ContentMessageItem from \"./ContentMessageItem\";\r\nimport ContentMessageItemEditor from \"./ContentMessageItemEditor\";\r\nimport ContentMessagesChannelDescription from \"./ContentMessages.ChannelDescription\";\r\nimport ContentMessagesConversationDescription from \"./ContentMessages.ConversationDescription\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport ApiService from \"services/ApiService\";\r\nimport MessageChangeService from \"services/MessageChangeService\";\r\nimport MessageScrollService from \"../services/MessageScrollService\";\r\n\r\nclass ContentMessages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fetchHistory = this.fetchHistory.bind(this);\r\n    this.loadMoreHistory = this.loadMoreHistory.bind(this);\r\n    this.onChannelMessageItemChange = this.onChannelMessageItemChange.bind(\r\n      this\r\n    );\r\n    this.onConversationMessageItemChange = this.onConversationMessageItemChange.bind(\r\n      this\r\n    );\r\n    this.onEditMessageClicked = this.onEditMessageClicked.bind(this);\r\n    this.onCloseEditingMessage = this.onCloseEditingMessage.bind(this);\r\n    this.onScrollToTop = this.onScrollToTop.bind(this);\r\n    this.onImageLoadingFinished = this.onImageLoadingFinished.bind(this);\r\n    this.onMentionedUserClick = this.onMentionedUserClick.bind(this);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.mesageChangeService = new MessageChangeService();\r\n    this.messageScrollService = new MessageScrollService({\r\n      scrollableElementSelector:\r\n        \".message-container .simplebar-content-wrapper\",\r\n      anchorSelector: \".message-group-anchor\",\r\n      stickyItemClassName: \"sticky-on-top\",\r\n      onScrollToTop: this.onScrollToTop\r\n    });\r\n\r\n    if (props.hubConnection) {\r\n      props.hubConnection.on(\r\n        \"ChannelMessageItemChanged\",\r\n        this.onChannelMessageItemChange\r\n      );\r\n      props.hubConnection.on(\r\n        \"ConversationMessageItemChanged\",\r\n        this.onConversationMessageItemChange\r\n      );\r\n    }\r\n\r\n    this.resetMessage();\r\n    this.state = {\r\n      messageGroups: [],\r\n      editingMessageId: undefined\r\n    };\r\n\r\n    this.scrollDetector = {};\r\n  }\r\n\r\n  onScrollToTop() {\r\n    if (!this.areAllPagesLoaded && !this.isFetchingHistory)\r\n      this.loadMoreHistory();\r\n  }\r\n\r\n  resetMessage() {\r\n    this.areAllPagesLoaded = false;\r\n    this.isFetchingHistory = false;\r\n    this.isFetchingSingleMessage = false;\r\n    this.resetLoadImage();\r\n  }\r\n\r\n  loadMoreHistory() {\r\n    this.fetchHistory(true);\r\n  }\r\n\r\n  fetchHistory(isLoadingMore) {\r\n    this.isFetchingHistory = true;\r\n    let section = this.props.section;\r\n    let id = this.props.id;\r\n\r\n    let url;\r\n    if (this.state.messageGroups.length > 0) {\r\n      let currentMessageId = this.state.messageGroups[0].messages[0].id;\r\n      url = `/api/messages/${section}/${id}/${currentMessageId}`;\r\n    } else {\r\n      url = `/api/messages/${section}/${id}`;\r\n    }\r\n\r\n    return this.apiService\r\n      .fetch(url)\r\n      .then(messageLoad => {\r\n        if (\r\n          this.isFetchingHistory &&\r\n          section === this.props.section &&\r\n          id === this.props.id\r\n        ) {\r\n          this.areAllPagesLoaded = messageLoad.allMessagesLoaded;\r\n          this.setNewImageFileCount(messageLoad.messageGroupDtos);\r\n          let updatedMessageGroups = this.mesageChangeService.mergeMessageGroups(\r\n            messageLoad.messageGroupDtos,\r\n            this.state.messageGroups\r\n          );\r\n          if (!isLoadingMore)\r\n            this.messageChannelDescriptionDto =\r\n              messageLoad.messageChannelDescriptionDto;\r\n          this.updateMessageGroups(updatedMessageGroups, () => {\r\n            if (isLoadingMore) this.messageScrollService.resumeScrollPosition();\r\n            else {\r\n              this.messageScrollService.scrollToBottom();\r\n              this.props.onFinishLoading();\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.isFetchingHistory = false;\r\n      });\r\n  }\r\n\r\n  fetchSingleMessage(messageId) {\r\n    return this.apiService.fetch(\r\n      `/api/messages/${this.props.section}/${this.props.id}/singleMessage/${messageId}`\r\n    );\r\n  }\r\n\r\n  handleMessageItemChange(changeType, messageId) {\r\n    switch (changeType) {\r\n      case this.mesageChangeService.CHANGE_TYPE.ADDED:\r\n        this.handleAddedMessageItem(messageId);\r\n        break;\r\n      case this.mesageChangeService.CHANGE_TYPE.EDITED:\r\n        this.handleEditedMessageItem(messageId);\r\n        break;\r\n      case this.mesageChangeService.CHANGE_TYPE.DELETED:\r\n        this.handleDeletedMessageItem(messageId);\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleAddedMessageItem(messageId) {\r\n    this.isFetchingSingleMessage = true;\r\n    this.fetchSingleMessage(messageId)\r\n      .then(messageGroupDto => {\r\n        if (this.isFetchingSingleMessage) {\r\n          this.setNewImageFileCount([messageGroupDto]);\r\n          let newMessage = messageGroupDto.messages[0];\r\n          let updatedMessageGroups = this.mesageChangeService.mergeMessageGroups(\r\n            this.state.messageGroups,\r\n            [messageGroupDto]\r\n          );\r\n          let isCloseToBottom = this.messageScrollService.isCloseToBottom();\r\n          this.updateMessageGroups(updatedMessageGroups, () => {\r\n            if (isCloseToBottom)\r\n              this.messageScrollService.scrollToBottom();\r\n          });\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.isFetchingSingleMessage = false;\r\n      });\r\n  }\r\n\r\n  handleEditedMessageItem(messageId) {\r\n    this.isFetchingSingleMessage = true;\r\n    this.fetchSingleMessage(messageId)\r\n      .then(messageGroupDto => {\r\n        if (this.isFetchingSingleMessage) {\r\n          let updatedMessageGroups = this.mesageChangeService.handleEditedMessageItem(\r\n            messageGroupDto,\r\n            this.state.messageGroups\r\n          );\r\n          if (updatedMessageGroups)\r\n            this.updateMessageGroups(updatedMessageGroups);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.isFetchingSingleMessage = false;\r\n      });\r\n  }\r\n\r\n  handleDeletedMessageItem(messageId) {\r\n    let updatedMessageGroups = this.mesageChangeService.handleDeletedMessageItem(\r\n      messageId,\r\n      this.state.messageGroups\r\n    );\r\n    if (updatedMessageGroups) this.updateMessageGroups(updatedMessageGroups);\r\n  }\r\n\r\n  onChannelMessageItemChange(channelId, changeType, messageId) {\r\n    if (this.props.section === \"channel\" && this.props.id === channelId) {\r\n      this.handleMessageItemChange(changeType, messageId);\r\n    }\r\n  }\r\n\r\n  onConversationMessageItemChange(conversationId, changeType, messageId) {\r\n    if (\r\n      this.props.section === \"conversation\" &&\r\n      this.props.id === conversationId\r\n    ) {\r\n      this.handleMessageItemChange(changeType, messageId);\r\n    }\r\n  }\r\n\r\n  onEditMessageClicked(messageId) {\r\n    this.setState({ editingMessageId: messageId });\r\n  }\r\n\r\n  onCloseEditingMessage() {\r\n    this.setState({ editingMessageId: undefined });\r\n  }\r\n\r\n  updateMessageGroups(messageGroups, callback) {\r\n    this.setState({ messageGroups: messageGroups }, () => {\r\n      if (callback) this.loadImage.imagesLoadedCallbacks.push(callback);\r\n      if (this.loadImage.loadedImageCount === this.loadImage.imageFileCount) {\r\n        this.finishLoading();\r\n      } else {\r\n        let timeoutInSeconds = 5;\r\n        this.imageLoadTimeout = setTimeout(() => {\r\n          this.finishLoading();\r\n        }, timeoutInSeconds * 1000);\r\n      }\r\n    });\r\n  }\r\n\r\n  setNewImageFileCount(newMessageGroups) {\r\n    newMessageGroups &&\r\n      newMessageGroups.forEach(group => {\r\n        let fileMessages = group.messages.filter(m => m.hasFileAttachments);\r\n        fileMessages.forEach(fileMessage => {\r\n          fileMessage.fileAttachments.forEach(file => {\r\n            if (file.contentType.startsWith(\"image\"))\r\n              this.loadImage.imageFileCount++;\r\n          });\r\n        });\r\n\r\n        let messagesContainingUrlLinks = group.messages.filter(\r\n          m => m.containsOpenGraphObjects\r\n        );\r\n        messagesContainingUrlLinks.forEach(message => {\r\n          this.loadImage.imageFileCount += message.openGraphImageCount;\r\n        });\r\n      });\r\n  }\r\n\r\n  onImageLoadingFinished() {\r\n    this.loadImage.loadedImageCount++;\r\n    if (this.loadImage.loadedImageCount === this.loadImage.imageFileCount) {\r\n      this.imageLoadTimeout && clearTimeout(this.imageLoadTimeout);\r\n      this.finishLoading();\r\n    }\r\n  }\r\n\r\n  finishLoading() {\r\n    if (this.state.messageGroups.length > 0) this.messageScrollService.reset();\r\n    let callbacks = this.loadImage.imagesLoadedCallbacks;\r\n    this.resetLoadImage();\r\n\r\n    if (callbacks) {\r\n      for (let callback of callbacks) callback();\r\n    }\r\n  }\r\n\r\n  resetLoadImage() {\r\n    this.loadImage = {\r\n      imageFileCount: 0,\r\n      loadedImageCount: 0,\r\n      imagesLoadedCallbacks: []\r\n    };\r\n  }\r\n\r\n  onMentionedUserClick(event) {\r\n    if (event.target && event.target.classList.contains(\"mentioned-user\")) {\r\n      let userId = event.target.getAttribute(\"data-user-id\");\r\n      this.props.onOpenUserPopup(event.target, userId);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchHistory(false);\r\n    let messageContainer = document.querySelector(\".message-container\");\r\n    messageContainer.addEventListener(\"click\", this.onMentionedUserClick);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.section !== prevProps.section ||\r\n      this.props.id !== prevProps.id\r\n    ) {\r\n      this.resetMessage();\r\n      this.updateMessageGroups([], () => this.fetchHistory(false));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let messageContainer = document.querySelector(\".message-container\");\r\n    messageContainer.removeEventListener(\"click\", this.onMentionedUserClick);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"message-container\">\r\n        <SimpleBar className=\"message-scrollable\">\r\n          {this.areAllPagesLoaded && (\r\n            <div className=\"message-group message-content-description\">\r\n              <div className=\"message-group-anchor\" />\r\n              {this.props.isChannel ? (\r\n                <ContentMessagesChannelDescription\r\n                  messageChannelDescriptionDto={\r\n                    this.messageChannelDescriptionDto\r\n                  }\r\n                  userProfile={this.props.userProfile}\r\n                />\r\n              ) : (\r\n                this.props.messageChannelUserList &&\r\n                this.props.messageChannelUserList.length > 0 && (\r\n                  <ContentMessagesConversationDescription\r\n                    userList={this.props.messageChannelUserList}\r\n                    userProfile={this.props.userProfile}\r\n                    isSelfConversation={\r\n                      this.messageChannelDescriptionDto.isSelfConversation\r\n                    }\r\n                  />\r\n                )\r\n              )}\r\n            </div>\r\n          )}\r\n          {this.state.messageGroups.map((g, index) => (\r\n            <div key={g.dateString} className=\"message-group\">\r\n              <div className=\"message-group-anchor\" />\r\n              <div className=\"message-group-header-container\">\r\n                <div className=\"message-group-header horizontal-divider\">\r\n                  <span>{g.dateString}</span>\r\n                </div>\r\n              </div>\r\n              {index === 0 && !this.areAllPagesLoaded && (\r\n                <div className=\"message-load-history\">Loading history...</div>\r\n              )}\r\n              {g.messages.map(m => (\r\n                <div key={m.id}>\r\n                  {this.state.editingMessageId !== m.id && (\r\n                    <ContentMessageItem\r\n                      message={m}\r\n                      onEditMessageClicked={this.onEditMessageClicked}\r\n                      onImageLoadingFinished={this.onImageLoadingFinished}\r\n                      onOpenUserPopup={this.props.onOpenUserPopup}\r\n                      {...this.props}\r\n                    />\r\n                  )}\r\n                  {this.state.editingMessageId === m.id && (\r\n                    <ContentMessageItemEditor\r\n                      className=\"content-message-item-container\"\r\n                      message={m}\r\n                      onClose={this.onCloseEditingMessage}\r\n                      {...this.props}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </SimpleBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentMessages;\r\n","import React from \"react\";\r\nimport \"./ContentFooter.css\";\r\nimport ContentEditor from \"./ContentEditor\";\r\nimport AuthService from \"services/AuthService\";\r\n\r\nclass ContentFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.authService = new AuthService(props);\r\n    this.onOtherUserTyping = this.onOtherUserTyping.bind(this);\r\n    this.onOtherUserFinishedTyping = this.onOtherUserFinishedTyping.bind(this);\r\n\r\n    if (props.hubConnection) {\r\n      props.hubConnection.on(\"UserTyping\", this.onOtherUserTyping);\r\n      props.hubConnection.on(\r\n        \"UserFinishedTyping\",\r\n        this.onOtherUserFinishedTyping\r\n      );\r\n    }\r\n\r\n    this.otherTypingNames = [];\r\n\r\n    this.state = {\r\n      showOtherTypingInfo: false,\r\n      otherTypingUserName: undefined\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.isChannel !== prevProps.isChannel ||\r\n      this.props.id !== prevProps.id\r\n    ) {\r\n      this.otherTypingNames = [];\r\n      this.toggleOtherTypingInfo(false);\r\n    }\r\n  }\r\n\r\n  toggleOtherTypingInfo(show) {\r\n    let names =\r\n      this.otherTypingNames.length > 2\r\n        ? \"Multiple users\"\r\n        : this.otherTypingNames.join(\", \");\r\n\r\n    this.setState({\r\n      showOtherTypingInfo: show,\r\n      otherTypingUserName: names\r\n    });\r\n  }\r\n\r\n  onOtherUserTyping(name, isChannel, id) {\r\n    if (isChannel === this.props.isChannel && id === this.props.id) {\r\n      this.addTypingName(name);\r\n\r\n      setTimeout(() => {\r\n        this.removeTypingName(name);\r\n      }, 10000);\r\n    }\r\n  }\r\n\r\n  onOtherUserFinishedTyping(name, isChannel, id) {\r\n    if (isChannel === this.props.isChannel && id === this.props.id) {\r\n      this.removeTypingName(name);\r\n    }\r\n  }\r\n\r\n  addTypingName(name) {\r\n    let index = this.otherTypingNames.indexOf(name);\r\n    if (index < 0) {\r\n      this.otherTypingNames.push(name);\r\n      this.toggleOtherTypingInfo(true);\r\n    }\r\n  }\r\n\r\n  removeTypingName(name) {\r\n    let index = this.otherTypingNames.indexOf(name);\r\n    if (index > -1) {\r\n      this.otherTypingNames.splice(index, 1);\r\n      this.toggleOtherTypingInfo(this.otherTypingNames.length > 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div id=\"footerEditor\">\r\n          <ContentEditor containerId=\"footerEditor\" {...this.props} />\r\n        </div>\r\n        {this.state.showOtherTypingInfo && (\r\n          <div className=\"message-typing-info\">\r\n            <span>{this.state.otherTypingUserName}</span>{\" \"}\r\n            {this.otherTypingNames.length > 1 ? \"are\" : \"is\"} typing\r\n          </div>\r\n        )}\r\n        <div className=\"message-prompt\">\r\n          <div>\r\n            <span>\r\n              <b>*bold*</b>\r\n            </span>\r\n            <span className=\"grey-background\">`code`</span>\r\n            <span className=\"grey-background\">```preformatted```</span>\r\n            <span>\r\n              <i>_italics_</i>\r\n            </span>\r\n            <span>~strike~</span>\r\n            <span>>quote</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentFooter;\r\n","import React from \"react\";\r\nimport \"./UserPopup.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport ApiService from \"services/ApiService\";\r\nimport BlankModalWithPageOverlay from \"modals/BlankModalWithPageOverlay\";\r\n\r\nclass UserPopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startConversation = this.startConversation.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.state = {\r\n      userRealtimeStatusLoaded: false\r\n    };\r\n  }\r\n\r\n  startConversation() {\r\n    this.apiService\r\n      .fetch(`/api/conversations/start`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify([this.props.user.id])\r\n      })\r\n      .then(id => {\r\n        this.props.onClose();\r\n        this.props.history.push(`/conversation/${id}`);\r\n      })\r\n      .catch(error => {\r\n        toast.error(`Start conversation failed: ${error}`);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.apiService\r\n      .fetch(`/api/users/${this.props.user.id}/onlineStatus`)\r\n      .then(isOnline => {\r\n        this.isUserOnline = isOnline;\r\n        this.setState({ userRealtimeStatusLoaded: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let user = this.props.user;\r\n    return (\r\n      <BlankModalWithPageOverlay\r\n        clickedTarget={this.props.clickedTarget}\r\n        onClose={this.props.onClose}\r\n      >\r\n        <div className=\"user-popup panel\">\r\n          <div className=\"user-popup-header\">\r\n            <img className=\"user-identicon\" src={user.identiconPath} />\r\n          </div>\r\n          <div className=\"user-popup-body\">\r\n            <div className=\"user-popup-user-info\">\r\n              <div className=\"user-popup-user-name\">\r\n                <b>{user.displayName}</b>\r\n                {this.state.userRealtimeStatusLoaded && this.isUserOnline && (\r\n                  <span className=\"user-realtime-status\" title=\"active\">\r\n                    <span className=\"user-realtime-status-circle\" />\r\n                  </span>\r\n                )}\r\n                {this.state.userRealtimeStatusLoaded && !this.isUserOnline && (\r\n                  <span\r\n                    className=\"user-realtime-status user-offline\"\r\n                    title=\"away\"\r\n                  >\r\n                    <span className=\"user-realtime-status-circle\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div>Email: {user.email}</div>\r\n              {user.phoneNumber && <div>Phone: {user.phoneNumber}</div>}\r\n            </div>\r\n            <div className=\"user-popup-list-section\">\r\n              <div className=\"dropdown-section\">\r\n                <ul>\r\n                  <li onClick={this.startConversation}>Direct message</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </BlankModalWithPageOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPopup;\r\n","import React from \"react\";\r\nimport \"./Content.css\";\r\nimport ApiService from \"services/ApiService\";\r\nimport ContentHeader from \"content/ContentHeader\";\r\nimport ContentMessages from \"content/ContentMessages\";\r\nimport ContentFooter from \"content/ContentFooter\";\r\nimport { Loader, Image, Segment } from \"semantic-ui-react\";\r\nimport UserPopup from \"../components/UserPopup\";\r\n\r\nclass Content extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFinishLoading = this.onFinishLoading.bind(this);\r\n    this.onOpenUserPopup = this.onOpenUserPopup.bind(this);\r\n    this.onUserPopupClose = this.onUserPopupClose.bind(this);\r\n    this.apiService = new ApiService(props);\r\n\r\n    if (props.hubConnection) {\r\n      props.hubConnection.on(\"ConversationUserListChanged\", () =>\r\n        this.fetchUsers()\r\n      );\r\n    }\r\n\r\n    this.state = {\r\n      isPageLoading: true,\r\n      messageChannelUserList: [],\r\n      isUserPopupOpen: false\r\n    };\r\n  }\r\n\r\n  fetchUsers() {\r\n    let url = this.props.isChannel\r\n      ? `/api/channels/${this.props.id}/users`\r\n      : `/api/conversations/${this.props.id}/users`;\r\n\r\n    this.apiService\r\n      .fetch(url)\r\n      .then(users => this.setState({ messageChannelUserList: users }));\r\n  }\r\n\r\n  onUserPopupClose() {\r\n    this.popupClickedTarget = undefined;\r\n    this.popupUser = undefined;\r\n    this.setState({ isUserPopupOpen: false });\r\n  }\r\n\r\n  onOpenUserPopup(clickedTarget, userId) {\r\n    let user = this.state.messageChannelUserList.find(\r\n      user => user.id === userId\r\n    );\r\n    if (user) this.openUserPopup(clickedTarget, user);\r\n    else {\r\n      this.apiService.fetch(`/api/users/${userId}`).then(user => {\r\n        if (user) this.openUserPopup(clickedTarget, user);\r\n      });\r\n    }\r\n  }\r\n\r\n  openUserPopup(clickedTarget, user) {\r\n    this.popupClickedTarget = clickedTarget;\r\n    this.popupUser = user;\r\n    this.setState({ isUserPopupOpen: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.isChannel !== prevProps.isChannel ||\r\n      this.props.id !== prevProps.id\r\n    ) {\r\n      this.fetchUsers();\r\n    }\r\n  }\r\n\r\n  onFinishLoading() {\r\n    this.setState({ isPageLoading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        {this.state.isPageLoading && (\r\n          <Segment>\r\n            <Loader active>Loading</Loader>\r\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n          </Segment>\r\n        )}\r\n        <ContentHeader\r\n          messageChannelUserList={this.state.messageChannelUserList}\r\n          onOpenUserPopup={this.onOpenUserPopup}\r\n          {...this.props}\r\n        />\r\n        <ContentMessages\r\n          messageChannelUserList={this.state.messageChannelUserList}\r\n          onFinishLoading={this.onFinishLoading}\r\n          onOpenUserPopup={this.onOpenUserPopup}\r\n          {...this.props}\r\n        />\r\n        <ContentFooter\r\n          isChannel={this.props.isChannel}\r\n          section={this.props.section}\r\n          id={this.props.id}\r\n          hubConnection={this.props.hubConnection}\r\n          userProfile={this.props.userProfile}\r\n        />\r\n        {this.state.isUserPopupOpen && (\r\n          <UserPopup\r\n            user={this.popupUser}\r\n            clickedTarget={this.popupClickedTarget}\r\n            onClose={this.onUserPopupClose}\r\n            {...this.props}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"./MainPage.css\";\r\nimport Sidebar from \"sidebar/Sidebar\";\r\nimport * as signalR from \"@aspnet/signalr\";\r\nimport Content from \"content/Content\";\r\nimport ApiService from \"services/ApiService\";\r\nimport ProfileService from \"services/ProfileService\";\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.isPulseSignalJustSent = false;\r\n    this.profileService = new ProfileService();\r\n    this.apiService = new ApiService(props);\r\n\r\n    this.connection = new signalR.HubConnectionBuilder()\r\n      // TODO use config here?\r\n      .withUrl(`http://localhost:58314/chatHub/`, {\r\n        accessTokenFactory: () => this.profileService.getToken()\r\n      })\r\n      .build();\r\n    this.connection.start().catch(function (err) {\r\n      return console.error(err.toString());\r\n    });\r\n\r\n    this.onUserSessionDataChange = this.onUserSessionDataChange.bind(this);\r\n    this.onProfileUpdated = this.onProfileUpdated.bind(this);\r\n    this.sendPulseSignal = this.sendPulseSignal.bind(this);\r\n\r\n    this.state = {\r\n      savedActiveSidebarItem: undefined,\r\n      userStatus: undefined,\r\n      userProfile: this.profileService.getProfile(),\r\n      userSessionDataLoaded: false\r\n    };\r\n\r\n    this.sendPulseSignal();\r\n  }\r\n\r\n  onUserSessionDataChange() {\r\n    this.apiService.fetch(`/api/app/userSessionData`).then(data => {\r\n      if (data) {\r\n        this.setState({\r\n          savedActiveSidebarItem: data.activeSidebarItem,\r\n          userStatus: data.userStatus,\r\n          userSessionDataLoaded: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onProfileUpdated() {\r\n    this.apiService.fetch(`/api/identity/userProfile`).then(profile => {\r\n      if (profile) {\r\n        this.profileService.setProfile(profile);\r\n        this.setState({ userProfile: profile });\r\n      }\r\n    });\r\n  }\r\n\r\n  sendPulseSignal() {\r\n    if (!this.isPulseSignalJustSent) {\r\n      this.isPulseSignalJustSent = true;\r\n      this.apiService.fetch(\"/api/app/userPulseSignal\", {\r\n        method: \"POST\"\r\n      });\r\n      setTimeout(() => {\r\n        this.isPulseSignalJustSent = false;\r\n      }, 30000); // throttle it to once in 30 secs\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onUserSessionDataChange();\r\n  }\r\n\r\n  render() {\r\n    let params = this.props.match.params;\r\n    let section =\r\n      params.section ||\r\n      (this.state.savedActiveSidebarItem &&\r\n        !this.state.savedActiveSidebarItem.isChannel\r\n        ? \"conversation\"\r\n        : \"channel\");\r\n    let isChannel = section === \"channel\";\r\n    let id =\r\n      +params.id ||\r\n      (this.state.savedActiveSidebarItem &&\r\n        this.state.savedActiveSidebarItem.itemId\r\n        ? this.state.savedActiveSidebarItem.itemId\r\n        : this.state.userProfile.defaultChannelId);\r\n\r\n    return (\r\n      <div className=\"main-page-container\" onClick={this.sendPulseSignal}>\r\n        {this.state.userSessionDataLoaded && (\r\n          <div id=\"mainPage\">\r\n            <Sidebar\r\n              isChannel={isChannel}\r\n              id={id}\r\n              hubConnection={this.connection}\r\n              userProfile={this.state.userProfile}\r\n              {...this.props}\r\n            />\r\n            <Content\r\n              isChannel={isChannel}\r\n              id={id}\r\n              section={section}\r\n              hubConnection={this.connection}\r\n              onProfileUpdated={this.onProfileUpdated}\r\n              onUserSessionDataChange={this.onUserSessionDataChange}\r\n              userProfile={this.state.userProfile}\r\n              userStatus={this.state.userStatus}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport \"./AccountCommon.css\";\r\nimport AuthService from \"services/AuthService\";\r\nimport CloseButton from \"components/CloseButton\";\r\nimport ApiService from \"services/ApiService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.authService = new AuthService(props);\r\n    this.apiService = new ApiService(props);\r\n    this.onAccountFormSubmit = this.onAccountFormSubmit.bind(this);\r\n    this.onWorkspaceFormSubmit = this.onWorkspaceFormSubmit.bind(this);\r\n    this.onForgotPasswordFormSubmit = this.onForgotPasswordFormSubmit.bind(\r\n      this\r\n    );\r\n    this.onOwnerAccountFormSubmit = this.onOwnerAccountFormSubmit.bind(this);\r\n    this.onPasswordChange = this.onPasswordChange.bind(this);\r\n\r\n    this.createdWorkspaceName = \"\";\r\n    this.createdWorkspaceOwnerEmail = \"\";\r\n    this.createdWorkspaceOwnerPassword = \"\";\r\n    this.resetEmail = \"\";\r\n\r\n    this.state = {\r\n      isLoginFormVisible: true,\r\n      isForgotPasswordFormVisible: false,\r\n      isForgotPasswordConfirmationFormVisible: false,\r\n      isWorkspaceFormVisible: false,\r\n      isOwnerLoginFormVisible: false\r\n    };\r\n  }\r\n\r\n  onAccountFormSubmit(event) {\r\n    event.preventDefault();\r\n    let email = event.target.elements[\"email\"].value;\r\n    let password = event.target.elements[\"password\"].value;\r\n    if (email && password) {\r\n      let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n      button.classList.add(\"disabled-button\");\r\n\r\n      this.authService.login(email, password).catch(error => {\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n    }\r\n  }\r\n\r\n  onForgotPasswordFormSubmit(event) {\r\n    event.preventDefault();\r\n    let email = event.target.elements[\"email\"].value;\r\n\r\n    if (email) {\r\n      let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n      button.classList.add(\"disabled-button\");\r\n\r\n      this.apiService\r\n        .fetch(\r\n          `/api/users/forgotPassword`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(email)\r\n          },\r\n          false,\r\n          true // no auth\r\n        )\r\n        .then(() => {\r\n          this.resetEmail = email;\r\n          this.setState({\r\n            isForgotPasswordFormVisible: false,\r\n            isForgotPasswordConfirmationFormVisible: true\r\n          });\r\n        })\r\n        .catch(error => {\r\n          toast.error(`Send reset link failed: ${error}`);\r\n          button.classList.remove(\"disabled-button\");\r\n        });\r\n    }\r\n  }\r\n\r\n  onWorkspaceFormSubmit(event) {\r\n    event.preventDefault();\r\n    let email = event.target.elements[\"email\"].value;\r\n    let password = event.target.elements[\"password\"].value;\r\n    let workspace = event.target.elements[\"workspace\"].value;\r\n    let displayName = event.target.elements[\"displayName\"].value;\r\n\r\n    if (email && password && workspace) {\r\n      let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n      button.classList.add(\"disabled-button\");\r\n\r\n      this.apiService\r\n        .fetch(\r\n          `/api/workspaces/register`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email: email,\r\n              password: password,\r\n              workspaceName: workspace,\r\n              displayName: displayName\r\n            })\r\n          },\r\n          false,\r\n          true // no auth\r\n        )\r\n        .then(() => {\r\n          this.createdWorkspaceName = workspace;\r\n          this.createdWorkspaceOwnerEmail = email;\r\n          this.createdWorkspaceOwnerPassword = password;\r\n          this.setState({\r\n            isWorkspaceFormVisible: false,\r\n            isOwnerLoginFormVisible: true\r\n          });\r\n        })\r\n        .catch(error => {\r\n          toast.error(`Create workspace failed: ${error}`);\r\n          button.classList.remove(\"disabled-button\");\r\n        });\r\n    }\r\n  }\r\n\r\n  onOwnerAccountFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n    button.classList.add(\"disabled-button\");\r\n\r\n    this.authService\r\n      .login(\r\n        this.createdWorkspaceOwnerEmail,\r\n        this.createdWorkspaceOwnerPassword\r\n      )\r\n      .catch(error => {\r\n        button.classList.remove(\"disabled-button\");\r\n      });\r\n  }\r\n\r\n  onPasswordChange() {\r\n    let password = document.querySelector(\"#workspace input[name='password']\");\r\n    let confirmPassword = document.querySelector(\r\n      \"#workspace input[name='confirmPassword']\"\r\n    );\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Passwords don't match\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page\">\r\n        {this.state.isLoginFormVisible && (\r\n          <div id=\"loginContainer\" className=\"login-container panel\">\r\n            <section>\r\n              <div className=\"form-container\">\r\n                <h1>Login to your workspace</h1>\r\n                <form method=\"post\" onSubmit={this.onAccountFormSubmit}>\r\n                  <p className=\"form-description\">\r\n                    Enter email address and password to log in.\r\n                  </p>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                  />\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    minLength=\"6\"\r\n                    required\r\n                  />\r\n                  <p className=\"demo-user\">\r\n                    Demo User: ichat.test.user@gmail.com\r\n                    <br />\r\n                    Password: ichattest\r\n                  </p>\r\n                  <button type=\"submit\" className=\"btn form-control\">\r\n                    Log in\r\n                  </button>\r\n                  <div className=\"forgot-password\">\r\n                    <a\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          isLoginFormVisible: false,\r\n                          isForgotPasswordFormVisible: true\r\n                        })\r\n                      }\r\n                    >\r\n                      Forgot your password?\r\n                    </a>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </section>\r\n            <div className=\"horizontal-divider\">\r\n              <span>or</span>\r\n            </div>\r\n            <section>\r\n              <button\r\n                className=\"btn white-btn\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    isLoginFormVisible: false,\r\n                    isWorkspaceFormVisible: true\r\n                  })\r\n                }\r\n              >\r\n                Create New WorkSpace\r\n              </button>\r\n            </section>\r\n          </div>\r\n        )}\r\n        {this.state.isForgotPasswordFormVisible && (\r\n          <div className=\"login-container panel\">\r\n            <CloseButton\r\n              onClose={() =>\r\n                this.setState({\r\n                  isLoginFormVisible: true,\r\n                  isForgotPasswordFormVisible: false\r\n                })\r\n              }\r\n            />\r\n            <section>\r\n              <div className=\"form-container\">\r\n                <h1>Reset password</h1>\r\n                <form method=\"post\" onSubmit={this.onForgotPasswordFormSubmit}>\r\n                  <p className=\"form-description\">\r\n                    Enter your registered email address to reset password.\r\n                  </p>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                  />\r\n                  <button type=\"submit\" className=\"btn form-control\">\r\n                    Send reset link\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        )}\r\n        {this.state.isForgotPasswordConfirmationFormVisible && (\r\n          <div className=\"login-container panel\">\r\n            <section>\r\n              <div className=\"form-container\">\r\n                <h1>Email sent!</h1>\r\n                <form>\r\n                  <p className=\"form-description\">\r\n                    Check your <b>{this.resetEmail}</b> inbox to reset your\r\n                    password.\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        )}\r\n        {this.state.isWorkspaceFormVisible && (\r\n          <div className=\"login-container panel\">\r\n            <CloseButton\r\n              onClose={() =>\r\n                this.setState({\r\n                  isLoginFormVisible: true,\r\n                  isWorkspaceFormVisible: false\r\n                })\r\n              }\r\n            />\r\n            <section>\r\n              <div className=\"form-container\">\r\n                <h1>Create a new workspace</h1>\r\n                <form\r\n                  id=\"workspace\"\r\n                  method=\"post\"\r\n                  onSubmit={this.onWorkspaceFormSubmit}\r\n                >\r\n                  <p className=\"form-description\">\r\n                    Enter details to create workspace.\r\n                  </p>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"workspace\"\r\n                    type=\"text\"\r\n                    placeholder=\"Workspace Name\"\r\n                    pattern=\"[0-9A-Za-z_]*\"\r\n                    title=\"Workspace name can only contain numbers, letters and underscore.\"\r\n                    required\r\n                  />\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Your Email\"\r\n                    required\r\n                  />\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Your Password\"\r\n                    minLength=\"6\"\r\n                    onInput={this.onPasswordChange}\r\n                    required\r\n                  />\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    minLength=\"6\"\r\n                    onInput={this.onPasswordChange}\r\n                    required\r\n                  />\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"displayName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Your Display Name\"\r\n                  />\r\n                  <button type=\"submit\" className=\"btn form-control\">\r\n                    Create\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        )}\r\n        {this.state.isOwnerLoginFormVisible && (\r\n          <div className=\"login-container panel\">\r\n            <section>\r\n              <div className=\"form-container\">\r\n                <h1>\r\n                  Workspace <b>{this.createdWorkspaceName}</b> Created!\r\n                </h1>\r\n                <form method=\"post\" onSubmit={this.onOwnerAccountFormSubmit}>\r\n                  <p className=\"form-description\">\r\n                    Click <b>Continue</b> to login as{\" \"}\r\n                    <b>{this.createdWorkspaceOwnerEmail}</b>.\r\n                  </p>\r\n                  <button type=\"submit\" className=\"btn form-control\">\r\n                    Continue\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./AccountCommon.css\";\r\nimport ApiService from \"services/ApiService\";\r\nimport AuthService from \"services/AuthService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass AcceptInvitation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.authService = new AuthService(props);\r\n    this.onAcceptInvitationFormSubmit = this.onAcceptInvitationFormSubmit.bind(\r\n      this\r\n    );\r\n\r\n    let searchParams = new URLSearchParams(props.location.search);\r\n    this.workspaceName = searchParams.get(\"workspaceName\");\r\n    this.email = searchParams.get(\"email\");\r\n    this.code = searchParams.get(\"code\");\r\n    this.onPasswordChange = this.onPasswordChange.bind(this);\r\n  }\r\n\r\n  onAcceptInvitationFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let name = event.target.elements[\"name\"].value;\r\n    let password = event.target.elements[\"password\"].value;\r\n    if (this.email && password && this.code) {\r\n      let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n      button.classList.add(\"disabled-button\");\r\n\r\n      this.apiService\r\n        .fetch(\r\n          `/api/users/acceptInvitation`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email: this.email,\r\n              password: password,\r\n              name: name,\r\n              code: this.code\r\n            })\r\n          },\r\n          false,\r\n          true // no auth\r\n        )\r\n        .then(() => {\r\n          this.authService.login(this.email, password);\r\n        })\r\n        .catch(error => {\r\n          toast.error(`Create account failed: ${error}`);\r\n          button.classList.remove(\"disabled-button\");\r\n        });\r\n    }\r\n  }\r\n\r\n  onPasswordChange() {\r\n    let password = document.querySelector(\r\n      \"#acceptInvitation input[name='password']\"\r\n    );\r\n    let confirmPassword = document.querySelector(\r\n      \"#acceptInvitation input[name='confirmPassword']\"\r\n    );\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Passwords don't match\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"login-container panel\">\r\n          <div className=\"form-container\">\r\n            <h1>Join {this.workspaceName} on iChat</h1>\r\n            <form\r\n              id=\"acceptInvitation\"\r\n              method=\"post\"\r\n              onSubmit={this.onAcceptInvitationFormSubmit}\r\n            >\r\n              <p className=\"form-description\">\r\n                Enter your name and password to create account.\r\n              </p>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Display name\"\r\n              />\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                minLength=\"6\"\r\n                onInput={this.onPasswordChange}\r\n                required\r\n              />\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                minLength=\"6\"\r\n                onInput={this.onPasswordChange}\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"btn form-control\">\r\n                Create Account\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AcceptInvitation;\r\n","import React from \"react\";\r\nimport \"./AccountCommon.css\";\r\nimport ApiService from \"services/ApiService\";\r\nimport AuthService from \"services/AuthService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass ResetPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.apiService = new ApiService(props);\r\n    this.authService = new AuthService(props);\r\n    this.onResetPasswordFormSubmit = this.onResetPasswordFormSubmit.bind(this);\r\n\r\n    let searchParams = new URLSearchParams(props.location.search);\r\n    this.email = searchParams.get(\"email\");\r\n    this.code = searchParams.get(\"code\");\r\n    this.onPasswordChange = this.onPasswordChange.bind(this);\r\n  }\r\n\r\n  onResetPasswordFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let password = event.target.elements[\"password\"].value;\r\n\r\n    if (this.email && password && this.code) {\r\n      let button = event.currentTarget.querySelector(\"button[type='submit']\");\r\n      button.classList.add(\"disabled-button\");\r\n\r\n      this.apiService\r\n        .fetch(\r\n          `/api/users/resetPassword`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email: this.email,\r\n              password: password,\r\n              code: this.code\r\n            })\r\n          },\r\n          false,\r\n          true // no auth\r\n        )\r\n        .then(() => {\r\n          this.authService.login(this.email, password);\r\n        })\r\n        .catch(error => {\r\n          toast.error(`Reset password failed: ${error}`);\r\n          button.classList.remove(\"disabled-button\");\r\n        });\r\n    }\r\n  }\r\n\r\n  onPasswordChange() {\r\n    let password = document.querySelector(\r\n      \"#resetPassword input[name='password']\"\r\n    );\r\n    let confirmPassword = document.querySelector(\r\n      \"#resetPassword input[name='confirmPassword']\"\r\n    );\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Passwords don't match\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"login-container panel\">\r\n          <div className=\"form-container\">\r\n            <h1>Reset password</h1>\r\n            <form\r\n              id=\"resetPassword\"\r\n              method=\"post\"\r\n              onSubmit={this.onResetPasswordFormSubmit}\r\n            >\r\n              <p className=\"form-description\">Enter your new password.</p>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                minLength=\"6\"\r\n                onInput={this.onPasswordChange}\r\n                required\r\n              />\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                minLength=\"6\"\r\n                onInput={this.onPasswordChange}\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"btn form-control\">\r\n                Reset &amp; Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport AuthService from \"services/AuthService\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  let authService = new AuthService();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authService.isLoggedIn() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute","import React from \"react\";\r\nimport \"./App.css\";\r\nimport MainPage from \"./MainPage\";\r\nimport Login from \"account/Login\";\r\nimport AcceptInvitation from \"./account/AcceptInvitation\";\r\nimport ResetPassword from \"./account/ResetPassword\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport { toast, Slide } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  position: \"top-center\",\r\n  autoClose: 4000,\r\n  hideProgressBar: true,\r\n  newestOnTop: false,\r\n  closeOnClick: true,\r\n  pauseOnVisibilityChange: true,\r\n  draggable: true,\r\n  pauseOnHover: true,\r\n  transition: Slide\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"container\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path={\"/login\"} component={Login} />\r\n          <Route path={\"/user/acceptinvitation\"} component={AcceptInvitation} />\r\n          <Route path={\"/user/resetPassword\"} component={ResetPassword} />\r\n          <PrivateRoute path=\"/\" exact component={MainPage} />\r\n          <PrivateRoute path={\"/:section/:id\"} component={MainPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}