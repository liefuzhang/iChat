@page "{channelID:int?}"
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div id="container">
    <div id="sideBar">
        <h2>Channels</h2>
        @foreach (var channel in Model.Channels)
        {
            var isActive = "";
            if (channel.ID == Model.SelectedChannel.ID)
            {
                isActive = "active-channel";
            }
            <a asp-page="./Index" asp-route-channelID="@channel.ID">
                <div class="channel-item @isActive">
                    #&nbsp;
                    @Html.DisplayFor(model => channel.Name)
                </div>
            </a>
        }
    </div>

    <div id="content">
        <div class="content-header">
            <div class="channel-name">
                #@Model.SelectedChannel.Name
            </div>
            <div class="channel-topic">
                @Model.SelectedChannel.Topic
            </div>
        </div>
        <div class="message-container">
            <div class="message-scollable">
                @foreach (var message in Model.SelectedChannel.Messages)
                {
                    <div class="message-item">
                        <div class="message-title">
                            @message.User.DisplayName
                            &nbsp;
                            @message.CreatedDate.ToShortTimeString()
                        </div>
                        <div class="message-content">
                            @Html.Raw(message.Content)
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="footer">
            <form id="messageForm" method="post">
                <input type="hidden" name="channelId" value="@Model.SelectedChannel.ID" />
                <input type="hidden" name="newMessage"/>
                <div class="message-box">
                    <div id="messageEditor">
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts
    {
    <script>
        app.channelID = @Model.SelectedChannel.ID;

        function toggleFormatChars(range, char) {
            var text = quill.getText(range.index, range.length);
            var newText;
            if (text.length > 2 && text.startsWith(char) && text.endsWith(char)) {
                // remove char
                newText = text.substr(1, range.length - 2);
                quill.deleteText(range.index, range.length);
                quill.insertText(range.index, newText);
                quill.setSelection(range.index, range.length - 2);
            } else {
                // add char
                newText = char + text + char;
                quill.deleteText(range.index, range.length);
                quill.insertText(range.index, newText);
                quill.setSelection(range.index, range.length +2);
            }
        }

        //var bindings = {
        //    enter: {
        //        key: 'enter',
        //        shiftKey: false,
        //        handler: function () {
        //            var message = quill.root.innerHTML;
        //            if (!message)
        //                return false;

        //            var form = document.querySelector('#messageForm');
        //            var messageInput = document.querySelector('input[name=newMessage]');
        //            messageInput.value = message;
        //            form.submit();
        //            return false;
        //        }
        //    },
        //    custom_bold: {
        //        key: 'B',
        //        shortKey: true,
        //        handler: function (range, context)
        //        {
        //            if (range.length < 1)
        //                return false;

        //            toggleFormatChars(range, '*');
                    
        //            return false;
        //        }
        //    },
        //    bold: {
        //        key: 'I',
        //        shortKey: true,
        //        handler: function (range, context) {
        //            if (range.length < 1)
        //                return false;

        //            toggleFormatChars(range, '_');

        //            return false;
        //        }
        //    }
        //};

        var quill = new Quill('#messageEditor',
            {
                theme: 'snow',
                placeholder: 'Message @Model.SelectedChannel.Name',
                //modules: {
                //    keyboard: {
                //        bindings: bindings
                //    }
                //}
            });

        var messageBox = $('.message-box');
        messageBox.on('keydown', function(event) {
            var e = event.originalEvent;
            var ret = true;
            if(e.ctrlKey || e.metaKey){
                switch(e.keyCode){
                case 66: // ctrl+B or ctrl+b
                case 98:
                    ret = false;
                    break;
                case 73: // ctrl+I or ctrl+i
                case 105:
                    ret = false;
                    break;
                case 85: // ctrl+U or ctrl+u
                case 117:
                    ret = false;
                    break;
                }
            }
            return ret;
        });
    </script>
}
